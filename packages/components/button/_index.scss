@use "sass:math";
@use "../../core/settings" as *;
@use "../../core/tools" as *;

////
/// Button component
///
/// 1. Ensure that any global link styles are overridden.
/// 2. Fix unwanted button padding in Firefox.
/// 3. Use a pseudo element to expand the click target area to include the
///    button's shadow as well, in case users try to click it.
/// 4. Use a pseudo element to expand and cover the button's bounds, used to
///    add a button shadow or border without affecting the total height
///
/// @group components
////

// Because the shadow (s0) is visually 'part of' the button, we need to reduce
// the height of the button to compensate by adjusting its padding (s2) and
// increase the bottom margin to include it (s1).
$button-border-radius: $nhsuk-border-width-form-element * 2;
$button-shadow-size: $button-border-radius;
$button-padding-top-bottom-mobile: 8px;
$button-padding-top-bottom-desktop: 12px;
$button-padding-left-right: 16px;

.nhsuk-button {
  -webkit-appearance: none;
  background-color: $nhsuk-button-color;
  border: $nhsuk-border-width-form-element solid transparent;
  // Remove border radius from bottom left/right to hide pixel artifacts caused
  // by the shadow inner radius not matching the outer radius of the button
  border-radius: $button-border-radius $button-border-radius 0 0;
  box-sizing: border-box;
  cursor: pointer;
  display: inline-block;
  overflow: visible;
  margin-top: 0;
  padding: $button-padding-top-bottom-mobile $button-padding-left-right; // s2
  position: relative;
  text-align: center;
  vertical-align: top;
  width: auto;

  @include nhsuk-font(19, $weight: bold);
  @include nhsuk-responsive-margin(5, "bottom", $adjustment: $button-shadow-size); // s1

  @include nhsuk-media-query($from: tablet) {
    padding: $button-padding-top-bottom-desktop $button-padding-left-right; // s2
  }

  // [1]
  &,
  &:link,
  &:visited,
  &:active,
  &:hover {
    color: $nhsuk-button-text-color;
    text-decoration: none;
  }

  // [2]
  &::-moz-focus-inner {
    border: 0;
    padding: 0;
  }

  &:hover {
    background-color: $nhsuk-button-hover-color;
  }

  // Reset focus styles added to buttons as links
  &:focus {
    box-shadow: none;
    outline: none;
  }

  // Add button focus styles ensuring the active "pressed" state has priority
  &:focus:not(:active),
  &:focus:not(:active):hover {
    background-color: $nhsuk-focus-color;
    color: $nhsuk-focus-text-color;
    outline: $nhsuk-focus-width solid transparent;

    // Set shadow below the button [4]
    &::after {
      box-shadow: 0 $button-shadow-size 0 $nhsuk-focus-text-color; // s0
    }
  }

  &:active {
    background-color: $nhsuk-button-active-color;
    border-radius: $button-border-radius;
    top: $button-shadow-size;
  }

  // Default pseudo element styles for [3] and [4] below
  &::before,
  &::after {
    content: "";
    display: block;
    position: absolute;
    top: -$nhsuk-border-width-form-element;
    right: -$nhsuk-border-width-form-element;
    bottom: -$nhsuk-border-width-form-element;
    left: -$nhsuk-border-width-form-element;
    border-radius: $button-border-radius;
  }

  // Use a pseudo element to expand the click target area to include the
  // button's shadow as well, in case users try to click it [3]
  &::before {
    bottom: -($nhsuk-border-width-form-element + $button-shadow-size);
    border: $nhsuk-border-width-form-element solid transparent;
    background-color: transparent;
  }

  // Use a pseudo element to expand and cover the button's bounds, used to
  // add a button shadow without affecting the button's size or border [4]
  &::after {
    box-shadow: 0 $button-shadow-size 0 $nhsuk-button-shadow-color; // s0
  }

  // When the button is active it is shifted down by $button-shadow-size to
  // denote a 'pressed' state. If the user happened to click at the very top
  // of the button, their mouse is no longer over the button (because it has
  // 'moved beneath them') and so the click event is not fired.
  //
  // This corrects that by shifting the top of the pseudo element so that it
  // continues to cover the area that the user originally clicked, which means
  // the click event is still fired.
  &:active::before {
    top: -($nhsuk-border-width-form-element + $button-shadow-size);
    bottom: -$nhsuk-border-width-form-element;
  }

  // Remove button shadow when pressed
  &:active::after {
    box-shadow: none;
  }
}

/// Button variations

.nhsuk-button--secondary,
.nhsuk-button--secondary-solid {
  &,
  &:link,
  &:visited,
  &:active,
  &:hover {
    color: $nhsuk-secondary-button-text-color;
  }

  &:hover {
    background-color: $nhsuk-secondary-button-hover-color;
  }

  // Set border for active state (no shadow)
  &:active {
    background-color: $nhsuk-secondary-button-active-color;
    border-color: $nhsuk-secondary-button-border-color;
  }

  // Set border on click area for default and hover states which allows the
  // border to render underneath the shadow and hide pixel artifacts, but
  // ensuring the active "pressed" and focus states have priority [3]
  &:not(:focus):not(:active)::before {
    border-color: $nhsuk-secondary-button-border-color;
  }

  // Set shadow below the button for default and hover states [4]
  &:not(:focus):not(:active)::after {
    left: 0;
    right: 0;
    box-shadow: 0 $button-shadow-size 0 $nhsuk-secondary-button-shadow-color; // s0
    border-radius: math.div($button-border-radius, 2);
  }
}

.nhsuk-button--secondary {
  background-color: $nhsuk-secondary-button-color;
}

.nhsuk-button--secondary-solid {
  background-color: $nhsuk-secondary-button-solid-background-color;
}

.nhsuk-button--reverse {
  background-color: $nhsuk-reverse-button-color;

  &,
  &:link,
  &:visited,
  &:hover {
    color: $nhsuk-reverse-button-text-color;
  }

  &:hover {
    background-color: $nhsuk-reverse-button-hover-color;

    // Set shadow below the button [4]
    &:not(:active)::after {
      box-shadow: 0 $button-shadow-size 0 $nhsuk-reverse-button-shadow-color; // s0
    }
  }

  &:active {
    background-color: $nhsuk-reverse-button-active-color;
    color: $nhsuk-reverse-button-text-color;
  }

  // Set shadow below the button [4]
  &::after {
    box-shadow: 0 $button-shadow-size 0 $nhsuk-reverse-button-shadow-color; // s0
  }
}

.nhsuk-button--warning {
  background-color: $nhsuk-warning-button-color;

  &:hover {
    background-color: $nhsuk-warning-button-hover-color;
  }

  &:active {
    background-color: $nhsuk-warning-button-active-color;
  }

  // Set shadow below the button [4]
  &::after {
    box-shadow: 0 $button-shadow-size 0 $nhsuk-warning-button-shadow-color; // s0
  }
}

.nhsuk-button--login {
  background-color: $nhsuk-login-button-color;

  &:hover {
    background-color: $nhsuk-login-button-hover-color;
  }

  &:active {
    background-color: $nhsuk-login-button-active-color;
  }

  // Set shadow below the button [4]
  &::after {
    box-shadow: 0 $button-shadow-size 0 $nhsuk-login-button-shadow-color; // s0
  }
}

/// Button disabled states

.nhsuk-button--disabled,
.nhsuk-button:disabled {
  opacity: (0.5);
  pointer-events: none;
}
