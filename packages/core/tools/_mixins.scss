////
/// Mixins
///
/// @group tools
////

/// Clearfix mixin
///
/// @see utilities/clearfix
///
/// @example scss
///   @include clearfix();

@mixin clearfix() {
  &::after {
    clear: both;
    content: "";
    display: block;
  }
}

/// Reading width mixin, add a maximum width
/// to large pieces of content
///
/// @see utilities/reading-width
///
/// @example scss
///   @include reading-width();

@mixin reading-width() {
  max-width: 44em;
}

/// Helper function containing the common code for the following two mixins
///
/// @link https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
///   - Hiding Content for Accessibility, Jonathan Snook, February 2011
/// @link https://github.com/h5bp/html5-boilerplate/blob/9f13695d21ff92c55c78dfa9f16bb02a1b6e911f/src/css/main.css#L121-L158
///   - h5bp/html5-boilerplate - Thanks!
///
/// @param {Boolean} $important [true] - Whether to mark as `!important`
///
/// @link https://github.com/alphagov/govuk-frontend Original code taken from GDS (Government Digital Service)

@mixin _nhsuk-visually-hide-content($important: true) {
  position: absolute if($important, !important, null);

  width: 1px if($important, !important, null);
  height: 1px if($important, !important, null);
  // If margin is set to a negative value it can cause text to be announced in
  // the wrong order in VoiceOver for OSX
  margin: 0 if($important, !important, null);
  padding: 0 if($important, !important, null);

  overflow: hidden if($important, !important, null);

  // `clip` is needed for IE11 support
  clip: rect(0 0 0 0) if($important, !important, null);
  clip-path: inset(50%) if($important, !important, null);

  border: 0 if($important, !important, null);

  // For long content, line feeds are not interpreted as spaces and small width
  // causes content to wrap 1 word per line:
  // https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
  white-space: nowrap if($important, !important, null);

  // Prevent users from selecting or copying visually-hidden text. This prevents
  // a user unintentionally copying more text than they intended and needing to
  // manually trim it down again.
  user-select: none;
}

/// Hide an element visually, but have it available for screen readers
///
/// @see utilities/visually-hidden
///
/// @param {Boolean} $important [true] - Whether to mark as `!important`
///
/// @example scss
///   @include visually-hidden;

@mixin visually-hidden($important: true) {
  @include _nhsuk-visually-hide-content($important: $important);

  // Absolute positioning has the unintended consequence of removing any
  // whitespace surrounding visually hidden text from the accessibility tree.
  // Insert a space character before and after visually hidden text to separate
  // it from any visible text surrounding it.
  &::before {
    content: "\00a0";
  }

  &::after {
    content: "\00a0";
  }
}

/// Hide an element visually, but have it available for screen readers whilst
/// allowing the element to be focused when navigated to via the keyboard (e.g.
/// for the skip link)
///
/// @param {Boolean} $important [true] - Whether to mark as `!important`
///
/// @link https://github.com/alphagov/govuk-frontend Original code taken from GDS (Government Digital Service)

@mixin visually-hidden-focusable($important: true) {
  // IE 11 doesn't support the combined `:not(:active, :focus)` syntax.
  &:not(:active):not(:focus) {
    @include _nhsuk-visually-hide-content($important: $important);
  }
}

/// Show an element visually that has previously been hidden by visually-hidden
///
/// For differences between mobile and desktop views, use $display to set the CSS display property
///
/// @param {String} $display [null] - CSS display property (optional)
/// @param {Boolean} $important [true] - Whether to mark as `!important`
///
/// @example scss
///   @include visually-shown($display: table-header-group);
///
/// @deprecated To be removed in v10.0, use @media queries to apply `visually-hidden` instead

@mixin visually-shown($display: null, $important: true) {
  position: static if($important, !important, null);
  width: auto if($important, !important, null);
  height: auto if($important, !important, null);
  margin: 0 if($important, !important, null);
  padding: 0 if($important, !important, null);
  overflow: visible if($important, !important, null);
  clip: auto if($important, !important, null);
  clip-path: none if($important, !important, null);
  border: none if($important, !important, null);
  white-space: normal if($important, !important, null);
  user-select: auto if($important, !important, null);

  @if $display {
    display: $display;
  }
}

/// Top and bottom margin mixin, remove
/// the top and bottom margin spacing
///
/// @see utilities/top-and-bottom
///
/// @example scss
///   @include top-and-bottom();

@mixin top-and-bottom() {
  & > *:first-child {
    margin-top: 0;
  }

  & > *:last-child {
    margin-bottom: 0;
  }
}

/// Panel mixin
///
/// See components/_panel
///
/// @example scss
///   @include panel-with-label($color_nhsuk-blue, $color_nhsuk-white);

@mixin panel($panel-background-color, $panel-text-color) {
  background-color: $panel-background-color;
  color: $panel-text-color;

  @include top-and-bottom;
  @include nhsuk-responsive-margin(7, "bottom");
  @include nhsuk-responsive-margin(7, "top");
  @include nhsuk-responsive-padding(5);

  @include mq($media-type: print) {
    border: 1px solid $nhsuk-print-text-color;
    page-break-inside: avoid;
  }
}

/// Panel with label mixin, inherits panel styling
/// and removes padding top for the label positioning.
///
/// Used in-conjunction with @mixin heading-label
///
/// @see components/_warning-component
///
/// @example scss
///   @include panel-with-label($color_nhsuk-blue, $color_nhsuk-white);

@mixin panel-with-label($panel-background-color, $panel-text-color, $panel-border-color) {
  border: 1px solid $panel-border-color;
  // stylelint-disable-next-line declaration-no-important
  padding-top: 0 !important;

  @include panel($panel-background-color, $panel-text-color);
}

/// Heading label mixin, adds a tab heading to
/// warning callout, do and don't lists and panel.
///
/// Used in-conjunction with @mixin panel-with-label
///
/// @see components/_warning-component
///
/// 1. Background colour to be set on the @include.
/// 2. Text colour to be set on the @include.
/// 3. Display inline-block so it does not take up the full width.
/// 4. Margin -24px left and right aligns the heading to the box.
/// 5. Top positioning set to minus to make the heading
///    sit just outside the box.
///
/// @example scss
///   @include heading-label($color_nhsuk-blue, $color_nhsuk-white);

@mixin heading-label($heading-background-color, $heading-text-color) {
  background-color: $heading-background-color; // [1]
  color: $heading-text-color; // [2]
  display: inline-block; // [3]
  margin: nhsuk-spacing(0) nhsuk-spacing(0) nhsuk-spacing(2) -33px;
  padding: nhsuk-spacing(2) nhsuk-spacing(5);
  position: relative;
  top: -16px; // [5]

  @include nhsuk-typography-responsive(24);

  @include mq($until: tablet) {
    margin-left: -25px;
    margin-right: 0;
    padding: nhsuk-spacing(2) nhsuk-spacing(4);
    top: -8px; // [5]
  }

  @include mq($media-type: print) {
    background: none;
    color: $color_nhsuk-black;
    top: 0;
  }
}

/// Care card mixin, used for creating
/// different coloured care cards.
///
/// @see components/card/card
///
/// @example scss
///   @include care-card($color_nhsuk-blue, $color_nhsuk-white, 4px);

@mixin care-card($heading-background-color, $heading-text-color, $print-border-size) {
  .nhsuk-card--care__heading-container {
    background-color: $heading-background-color;
    color: $heading-text-color;
  }

  @include mq($media-type: print) {
    border: $print-border-size solid $nhsuk-print-text-color;
    color: $nhsuk-print-text-color;
    page-break-inside: avoid;
  }
}

/// Print colour mixin, sets the text print colour
/// warning callout, do and don't lists and panels.
///
/// @see components/_care-card
///
/// @example scss
///   @include print-color($nhsuk-print-text-color);

@mixin print-color($print-color) {
  @include mq($media-type: print) {
    color: $print-color;
    fill: $print-color;

    &:active,
    &:focus,
    &:visited {
      color: $nhsuk-print-text-color;
    }
  }
}

/// Print hide mixin, hides the element from print.
///
/// @see components/_care-card
///
/// @example scss
///   @include print-hide();

@mixin print-hide() {
  @include mq($media-type: print) {
    display: none;
  }
}

/// Flex mixin
///
/// @example scss
///   @include flex();

@mixin flex() {
  display: flex;
  flex-wrap: wrap;
}

/// Flex item mixin
///
/// @example scss
///   @include flex-item();

@mixin flex-item() {
  display: flex;

  @include mq($until: desktop) {
    flex: 0 0 100%;
  }
}

/// Remove margin mobile mixin
///
/// Removes left and right margin at tablet breakpoint

@mixin remove-margin-mobile() {
  @include mq($until: tablet) {
    margin-left: -$nhsuk-gutter-half;
    margin-right: -$nhsuk-gutter-half;
  }
}

/// NHS logo size helper
///
/// Saves duplicating the code for when using the logo as a link.
/// Used in the header and footer.

@mixin nhsuk-logo-size {
  height: 40px;
  width: 100px;
}

@mixin nhsuk-logo-size-small {
  height: 32px;
  width: 80px;
}
