{# Adapted from https://github.com/alphagov/govuk-frontend/blob/main/packages/govuk-frontend/src/govuk/macros/attributes.njk #}

{#
  Renders component attributes as string

  * By default or using `optional: false`, attributes render as ` name="value"`
  * Using `optional: true`, attributes with empty (`null`, `undefined` or `false`) values are omitted
  * Using `optional: true`, attributes with `true` (boolean) values render `name` only without value

  {@link https://developer.mozilla.org/en-US/docs/Glossary/Boolean/HTML}

  @example
  Output attribute ` aria-hidden="true"` when `true` (boolean) or `"true"` (string)

  ```njk
  nhsukAttributes({
    "aria-hidden": true
  })
  ```

  @example
  Output attribute ` aria-hidden="false"` when `false` (boolean) or `"false"` (string)

  ```njk
  nhsukAttributes({
    "aria-hidden": false
  })
  ```

  @example
  Output attribute ` hidden=""` when `null`, `undefined` or empty `""` (string)

  ```njk
  nhsukAttributes({
    "hidden": undefined
  })
  ```

  @example
  Output attribute ` hidden` as boolean attribute when optional and `true`

  ```njk
  nhsukAttributes({
    hidden: {
      value: true,
      optional: true
    },
  })
  ```

  @example
  Output empty string when optional and `null`, `undefined` or `false`

  ```njk
  nhsukAttributes({
    hidden: {
      value: undefined,
      optional: true
    },
  })
  ```

  @private
  @param {{ [attribute: string]: string | { value: string, optional?: boolean } } | string} attributes - Component attributes param
#}
{% macro nhsukAttributes(attributes) -%}
  {#- Default attributes output -#}
  {% set attributesHtml = attributes if attributes is string else "" %}
  {% if attributes is string %}
    {{- attributes | safe -}}
  {% elif attributes is mapping %}
    {#- Append attribute name/value pairs -#}
    {% for name, value in attributes|dictsort %}
      {#- Detect if this is a `safe` filtered value. Just pass the value through if so. -#}
      {#- https://github.com/alphagov/govuk-frontend/issues/4937 -#}
      {% if value is mapping and not value.val in [undefined, null] and value | length %}
        {% set value = value.val %}
      {% endif %}

      {#- Set default attribute options -#}
      {% set options = value if value is mapping else {
        "value": value,
        "optional": false
      } %}

      {#- Output ` name` only (no value) for boolean attributes -#}
      {% if options.optional == true and options.value == true %}
        {{- " " + name | escape | safe -}}
      {#- Skip boolean attributes that have a falsey value. Otherwise output a ` name="value"` pair. -#}
      {% elif (options.optional == true and not options.value in [undefined, null, false]) or options.optional != true %}
        {{(" " ~ name | escape ~ '="' ~ options.value | escape ~ '"') | safe}}
      {% endif %}
    {% endfor %}
  {% endif %}
{%- endmacro %}
