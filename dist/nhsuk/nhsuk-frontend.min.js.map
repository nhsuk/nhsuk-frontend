{"version":3,"file":"nhsuk-frontend.min.js","sources":["../../src/nhsuk/common/closest-attribute-value.mjs","../../src/nhsuk/common/nhsuk-frontend-version.mjs","../../src/nhsuk/common/index.mjs","../../src/nhsuk/common/configuration/normalise-string.mjs","../../src/nhsuk/common/configuration/extract-config-by-namespace.mjs","../../src/nhsuk/common/configuration/merge-configs.mjs","../../src/nhsuk/errors/index.mjs","../../src/nhsuk/common/configuration/normalise-dataset.mjs","../../src/nhsuk/common/configuration/normalise-options.mjs","../../src/nhsuk/common/configuration/validate-config.mjs","../../src/nhsuk/component.mjs","../../src/nhsuk/configurable-component.mjs","../../src/nhsuk/components/button/button.mjs","../../src/nhsuk/i18n.mjs","../../src/nhsuk/components/character-count/character-count.mjs","../../src/nhsuk/components/checkboxes/checkboxes.mjs","../../src/nhsuk/components/error-summary/error-summary.mjs","../../src/nhsuk/components/header/header.mjs","../../src/nhsuk/components/notification-banner/notification-banner.mjs","../../src/nhsuk/components/radios/radios.mjs","../../src/nhsuk/components/skip-link/skip-link.mjs","../../src/nhsuk/components/tabs/tabs.mjs","../../src/nhsuk/index.mjs"],"sourcesContent":["/**\n * Returns the value of the given attribute closest to the given element (including itself)\n *\n * @param {Element} $element - The element to start walking the DOM tree up\n * @param {string} attributeName - The name of the attribute\n * @returns {string | null} Attribute value\n */\nexport function closestAttributeValue($element, attributeName) {\n  const $closestElementWithAttribute = $element.closest(`[${attributeName}]`)\n  return $closestElementWithAttribute\n    ? $closestElementWithAttribute.getAttribute(attributeName)\n    : null\n}\n","/*\n * This variable is automatically overwritten during builds and releases.\n * It doesn't need to be updated manually.\n */\n\n/**\n * NHS.UK frontend release version\n *\n * {@link https://github.com/nhsuk/nhsuk-frontend/releases}\n */\nexport const version = 'development'\n","/**\n * Toggle a toggle a class on conditional content for an input based on checked state\n *\n * @param {Element | null} $input - input element\n * @param {string} className - class to toggle\n */\nexport function toggleConditionalInput($input, className) {\n  if (!$input || !($input instanceof HTMLInputElement) || !className) {\n    return\n  }\n\n  const targetId = $input.getAttribute('aria-controls')\n  if (!targetId) {\n    return\n  }\n\n  const target = document.getElementById(targetId)\n  if (!target) {\n    return\n  }\n\n  $input.setAttribute('aria-expanded', $input.checked.toString())\n  target.classList.toggle(className, !$input.checked)\n}\n\n/**\n * Get NHS.UK frontend breakpoint value from CSS custom property\n *\n * @param {string} name - Breakpoint name\n */\nexport function getBreakpoint(name) {\n  const property = `--nhsuk-breakpoint-${name}`\n\n  // Get value from `<html>` with breakpoints on CSS :root\n  const value = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(property)\n\n  return {\n    property,\n    value: value || undefined\n  }\n}\n\n/**\n * Move focus to element\n *\n * Sets tabindex to -1 to make the element programmatically focusable,\n * but removes it on blur as the element doesn't need to be focused again.\n *\n * Original code taken from GDS (Government Digital Service)\n * {@link https://github.com/alphagov/govuk-frontend}\n *\n * @template {HTMLElement} FocusElement\n * @param {FocusElement} $element - HTML element\n * @param {object} [options] - Handler options\n * @param {function(this: FocusElement): void} [options.onBeforeFocus] - Callback before focus\n * @param {function(this: FocusElement): void} [options.onBlur] - Callback on blur\n */\nexport function setFocus($element, options = {}) {\n  const isFocusable = $element.getAttribute('tabindex')\n\n  if (!isFocusable) {\n    $element.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Handle element focus\n   */\n  function onFocus() {\n    $element.removeEventListener('focus', onFocus)\n    $element.addEventListener('blur', onBlur)\n  }\n\n  /**\n   * Handle element blur\n   */\n  function onBlur() {\n    $element.removeEventListener('blur', onBlur)\n\n    if (options.onBlur) {\n      options.onBlur.call($element)\n    }\n\n    if (!isFocusable) {\n      $element.removeAttribute('tabindex')\n    }\n  }\n\n  // Add listener to reset element on blur, after focus\n  $element.addEventListener('focus', onFocus)\n\n  // Focus element\n  if (options.onBeforeFocus) {\n    options.onBeforeFocus.call($element)\n  }\n\n  $element.focus()\n}\n\n/**\n * Checks if component is already initialised\n *\n * @param {Element} $root - HTML element to be checked\n * @param {string} moduleName - name of component module\n * @returns {boolean} Whether component is already initialised\n */\nexport function isInitialised($root, moduleName) {\n  return (\n    $root instanceof HTMLElement &&\n    $root.hasAttribute(`data-${moduleName}-init`)\n  )\n}\n\n/**\n * Checks if NHS.UK frontend is supported on this page\n *\n * Some browsers will load and run our JavaScript but NHS.UK frontend\n * won't be supported.\n *\n * @param {HTMLElement | null} [$scope] - (internal) `<body>` HTML element checked for browser support\n * @returns {boolean} Whether NHS.UK frontend is supported on this page\n */\nexport function isSupported($scope = document.body) {\n  if (!$scope) {\n    return false\n  }\n\n  return $scope.classList.contains('nhsuk-frontend-supported')\n}\n\n/**\n * Check for an object\n *\n * @template {Partial<Record<keyof ObjectType, unknown>>} ObjectType\n * @param {unknown | ObjectType} option - Option to check\n * @returns {option is ObjectType} Whether the option is an object\n */\nexport function isObject(option) {\n  return !!option && typeof option === 'object' && !Array.isArray(option)\n}\n\n/**\n * Check for valid scope\n *\n * @template {Element | Document} ScopeType\n * @param {unknown | ScopeType} $scope - Scope of the document to search within\n * @returns {$scope is ScopeType} Whether the scope can be queried\n */\nexport function isScope($scope) {\n  return !!$scope && ($scope instanceof Element || $scope instanceof Document)\n}\n\n/**\n * Format error message\n *\n * @param {CompatibleClass} Component - Component that threw the error\n * @param {string} message - Error message\n * @returns {string} - Formatted error message\n */\nexport function formatErrorMessage(Component, message) {\n  return `${Component.moduleName}: ${message}`\n}\n\nexport * from './closest-attribute-value.mjs'\nexport * from './nhsuk-frontend-version.mjs'\n\n/**\n * @import { CompatibleClass } from '../component.mjs'\n */\n","/**\n * Normalise string\n *\n * 'If it looks like a duck, and it quacks like a duckâ€¦' ðŸ¦†\n *\n * If the passed value looks like a boolean or a number, convert it to a boolean\n * or number.\n *\n * Designed to be used to convert config passed via data attributes (which are\n * always strings) into something sensible.\n *\n * @param {string | undefined} value - The value to normalise\n * @param {SchemaProperty} [property] - Component schema property\n * @returns Normalised data\n */\nexport function normaliseString(value, property) {\n  const trimmedValue = value ? value.trim() : ''\n\n  let output\n  let outputType = property?.type\n\n  // No schema type set? Determine automatically\n  if (!outputType) {\n    if (['true', 'false'].includes(trimmedValue)) {\n      outputType = 'boolean'\n    }\n\n    // Empty / whitespace-only strings are considered finite so we need to check\n    // the length of the trimmed string as well\n    if (trimmedValue.length > 0 && isFinite(Number(trimmedValue))) {\n      outputType = 'number'\n    }\n  }\n\n  switch (outputType) {\n    case 'boolean':\n      output = trimmedValue === 'true'\n      break\n\n    case 'number':\n      output = Number(trimmedValue)\n      break\n\n    default:\n      output = value\n  }\n\n  return output\n}\n\n/**\n * @import { SchemaProperty } from './index.mjs'\n */\n","import { isObject } from '../index.mjs'\n\nimport { normaliseString } from './normalise-string.mjs'\n\n/**\n * Extracts keys starting with a particular namespace from dataset ('data-*')\n * object, removing the namespace in the process, normalising all values\n *\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @param {Schema<ConfigurationType>} schema - The schema of a component\n * @param {DOMStringMap} dataset - The object to extract key-value pairs from\n * @param {keyof ConfigurationType} namespace - The namespace to filter keys with\n * @returns {ObjectNested | undefined} Nested object with dot-separated key namespace removed\n */\nexport function extractConfigByNamespace(schema, dataset, namespace) {\n  const property = schema.properties[namespace]\n\n  // Only extract configs for object schema properties\n  if (property?.type !== 'object') {\n    return\n  }\n\n  // Add default empty config\n  const newObject = /** @type {Record<typeof namespace, ObjectNested>} */ ({\n    [namespace]: {}\n  })\n\n  for (const [key, value] of Object.entries(dataset)) {\n    /** @type {ObjectNested | ObjectNested[NestedKey]} */\n    let current = newObject\n\n    // Split the key into parts, using . as our namespace separator\n    const keyParts = key.split('.')\n\n    /**\n     * Create new level per part\n     *\n     * e.g. 'i18n.textareaDescription.other' becomes\n     * `{ i18n: { textareaDescription: { other } } }`\n     */\n    for (const [index, name] of keyParts.entries()) {\n      if (isObject(current)) {\n        // Drop down to nested object until the last part\n        if (index < keyParts.length - 1) {\n          // New nested object (optionally) replaces existing value\n          if (!isObject(current[name])) {\n            current[name] = {}\n          }\n\n          // Drop down into new or existing nested object\n          current = current[name]\n        } else if (key !== namespace) {\n          // Normalised value (optionally) replaces existing value\n          current[name] = normaliseString(value)\n        }\n      }\n    }\n  }\n\n  return newObject[namespace]\n}\n\n/**\n * Schema for component config\n *\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @typedef {object} Schema\n * @property {Record<keyof ConfigurationType, SchemaProperty | undefined>} properties - Schema properties\n * @property {SchemaCondition<ConfigurationType>[]} [anyOf] - List of schema conditions\n */\n\n/**\n * Schema property for component config\n *\n * @typedef {object} SchemaProperty\n * @property {'string' | 'boolean' | 'number' | 'object'} type - Property type\n */\n\n/**\n * Schema condition for component config\n *\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @typedef {object} SchemaCondition\n * @property {(keyof ConfigurationType)[]} required - List of required config fields\n * @property {string} errorMessage - Error message when required config fields not provided\n */\n\n/**\n * @typedef {keyof ObjectNested} NestedKey\n * @typedef {{ [key: string]: string | boolean | number | ObjectNested | undefined }} ObjectNested\n */\n","import { isObject } from '../index.mjs'\n\n/**\n * Config merging function\n *\n * Takes any number of objects and combines them together, with\n * greatest priority on the LAST item passed in.\n *\n * @param {...{ [key: string]: unknown }} configObjects - Config objects to merge\n * @returns A merged config object\n */\nexport function mergeConfigs(...configObjects) {\n  // Start with an empty object as our base\n  /** @type {{ [key: string]: unknown }} */\n  const formattedConfigObject = {}\n\n  // Loop through each of the passed objects\n  for (const configObject of configObjects) {\n    for (const key of Object.keys(configObject)) {\n      const option = formattedConfigObject[key]\n      const override = configObject[key]\n\n      // Push their keys one-by-one into formattedConfigObject. Any duplicate\n      // keys with object values will be merged, otherwise the new value will\n      // override the existing value.\n      if (isObject(option) && isObject(override)) {\n        formattedConfigObject[key] = mergeConfigs(option, override)\n      } else {\n        // Apply override\n        formattedConfigObject[key] = override\n      }\n    }\n  }\n\n  return formattedConfigObject\n}\n","import { formatErrorMessage } from '../common/index.mjs'\n\n/**\n * NHS.UK frontend error\n *\n * A base class for `Error`s thrown by NHS.UK frontend.\n *\n * It is meant to be extended into specific types of errors\n * to be thrown by our code.\n *\n * @example\n * ```js\n * class MissingRootError extends NHSUKFrontendError {\n *   // Setting an explicit name is important as extending the class will not\n *   // set a new `name` on the subclass. The `name` property is important\n *   // to ensure intelligible error names even if the class name gets\n *   // mangled by a minifier\n *   name = \"MissingRootError\"\n * }\n * ```\n * @abstract\n */\nexport class NHSUKFrontendError extends Error {\n  name = 'NHSUKFrontendError'\n}\n\n/**\n * Indicates that NHS.UK frontend is not supported\n */\nexport class SupportError extends NHSUKFrontendError {\n  name = 'SupportError'\n\n  /**\n   * Checks if NHS.UK frontend is supported on this page\n   *\n   * @param {HTMLElement | null} [$scope] - HTML element `<body>` checked for browser support\n   */\n  constructor($scope = document.body) {\n    const supportMessage =\n      'noModule' in HTMLScriptElement.prototype\n        ? 'NHS.UK frontend initialised without `<body class=\"nhsuk-frontend-supported\">` from template `<script>` snippet'\n        : 'NHS.UK frontend is not supported in this browser'\n\n    super(\n      $scope\n        ? supportMessage\n        : 'NHS.UK frontend initialised without `<script type=\"module\">`'\n    )\n  }\n}\n\n/**\n * Indicates that a component has received an illegal configuration\n */\nexport class ConfigError extends NHSUKFrontendError {\n  name = 'ConfigError'\n}\n\n/**\n * Indicates an issue with an element (possibly `null` or `undefined`)\n */\nexport class ElementError extends NHSUKFrontendError {\n  name = 'ElementError'\n\n  /**\n   * @param {ElementErrorOptions} options - Element error options\n   */\n  constructor(options) {\n    const { component, identifier, element, expectedType } = options\n\n    let message = identifier\n\n    // Append reason\n    message += element\n      ? ` is not of type ${expectedType ?? 'HTMLElement'}`\n      : ' not found'\n\n    // Prepend with module name (optional)\n    if (component) {\n      message = formatErrorMessage(component, message)\n    }\n\n    super(message)\n  }\n}\n\n/**\n * Indicates that a component is already initialised\n */\nexport class InitError extends NHSUKFrontendError {\n  name = 'InitError'\n\n  /**\n   * @param {CompatibleClass | string} componentOrMessage - Component or init error message\n   */\n  constructor(componentOrMessage) {\n    const message =\n      typeof componentOrMessage === 'string'\n        ? componentOrMessage\n        : formatErrorMessage(\n            componentOrMessage,\n            'Root element (`$root`) already initialised'\n          )\n\n    super(message)\n  }\n}\n\n/**\n * Element error options\n *\n * @typedef {object} ElementErrorOptions\n * @property {Element | Document | null} [element] - The element in error (optional)\n * @property {CompatibleClass} [component] - Component throwing the error (optional)\n * @property {string} identifier - An identifier that'll let the user understand which element has an error. This is whatever makes the most sense\n * @property {string} [expectedType] - The type that was expected for the identifier\n */\n\n/**\n * @import { CompatibleClass } from '../component.mjs'\n */\n","import { ConfigError } from '../../errors/index.mjs'\nimport { formatErrorMessage, isObject } from '../index.mjs'\n\nimport { extractConfigByNamespace } from './extract-config-by-namespace.mjs'\nimport { normaliseString } from './normalise-string.mjs'\n\n/**\n * Normalise dataset\n *\n * Loop over an object and normalise each value using {@link normaliseString},\n * optionally expanding `data-i18n.property` nested values\n *\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @template {[keyof ConfigurationType, SchemaProperty | undefined][]} SchemaEntryType\n * @param {CompatibleClass & { schema?: Schema<ConfigurationType> }} Component - Component class\n * @param {DOMStringMap} dataset - HTML element dataset\n * @returns {ObjectNested} Normalised dataset\n */\nexport function normaliseDataset(Component, dataset) {\n  if (!isObject(Component.schema)) {\n    throw new ConfigError(\n      formatErrorMessage(\n        Component,\n        'Config passed as parameter into constructor but no schema defined'\n      )\n    )\n  }\n\n  const out = /** @type {ObjectNested} */ ({})\n  const entries = /** @type {SchemaEntryType} */ (\n    Object.entries(Component.schema.properties)\n  )\n\n  // Normalise top-level dataset ('data-*') values using schema types\n  for (const entry of entries) {\n    const [namespace, property] = entry\n\n    // Cast the `namespace` to string so it can be used to access the dataset\n    const field = namespace.toString()\n\n    if (field in dataset) {\n      out[field] = normaliseString(dataset[field], property)\n    }\n\n    /**\n     * Extract and normalise nested object values automatically using\n     * {@link normaliseString} but only schema object types are allowed\n     */\n    if (property?.type === 'object') {\n      out[field] = extractConfigByNamespace(\n        Component.schema,\n        dataset,\n        namespace\n      )\n    }\n  }\n\n  return out\n}\n\n/**\n * @import { CompatibleClass } from '../../component.mjs'\n * @import { ObjectNested, Schema, SchemaProperty } from './index.mjs'\n */\n","import { isObject, isScope } from '../index.mjs'\n\n/**\n * Normalise options passed to `initAll` or `createAll`\n *\n * @template {CompatibleClass} ComponentClass\n * @param {Config | CreateAllOptions<ComponentClass> | OnErrorCallback<ComponentClass> | Element | Document | null} [scopeOrOptions] - Scope of the document to search within, initialisation options or error callback function\n * @returns {CreateAllOptions<ComponentClass>} Normalised options\n */\nexport function normaliseOptions(scopeOrOptions) {\n  let /** @type {Element | Document | null} */ $scope = document\n  let /** @type {OnErrorCallback<ComponentClass> | undefined} */ onError\n\n  // Handle options object\n  if (isObject(scopeOrOptions)) {\n    const options = scopeOrOptions\n\n    // Scope must be valid or null\n    if (isScope(options.scope) || options.scope === null) {\n      $scope = options.scope\n    }\n\n    // Error handler must be a function\n    if (typeof options.onError === 'function') {\n      onError = options.onError\n    }\n  }\n\n  if (isScope(scopeOrOptions)) {\n    $scope = scopeOrOptions\n  } else if (scopeOrOptions === null) {\n    $scope = null\n  } else if (typeof scopeOrOptions === 'function') {\n    onError = scopeOrOptions\n  }\n\n  return {\n    scope: $scope,\n    onError\n  }\n}\n\n/**\n * @import { CompatibleClass } from '../../component.mjs'\n * @import { Config, CreateAllOptions, OnErrorCallback } from '../../index.mjs'\n */\n","/**\n * Validate component config by schema\n *\n * Follows limited examples in JSON schema for wider support in future\n *\n * {@link https://ajv.js.org/json-schema.html#compound-keywords}\n * {@link https://ajv.js.org/packages/ajv-errors.html#single-message}\n *\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} ConfigurationType\n * @param {Schema<ConfigurationType>} schema - The schema of a component\n * @param {ConfigurationType} config - Component config\n * @returns {string[]} List of validation errors\n */\nexport function validateConfig(schema, config) {\n  const validationErrors = []\n\n  // Check errors for each schema\n  for (const [name, conditions] of Object.entries(schema)) {\n    const errors = []\n\n    // Check errors for each schema condition\n    if (Array.isArray(conditions)) {\n      for (const { required, errorMessage } of conditions) {\n        if (!required.every((key) => !!config[key])) {\n          errors.push(errorMessage) // Missing config key value\n        }\n      }\n\n      // Check one condition passes or add errors\n      if (name === 'anyOf' && !(conditions.length - errors.length >= 1)) {\n        validationErrors.push(...errors)\n      }\n    }\n  }\n\n  return validationErrors\n}\n\n/**\n * @import { Schema } from './index.mjs'\n */\n","/* eslint-disable es-x/no-global-this */\n\nimport { isInitialised, isSupported } from './common/index.mjs'\nimport { ElementError, InitError, SupportError } from './errors/index.mjs'\n\nconst _self =\n  typeof globalThis !== 'undefined'\n    ? globalThis // Modern browsers, Node.js\n    : self // Old browsers, web workers\n\n/**\n * Base component class\n *\n * Centralises the behaviours shared by our components\n *\n * @abstract\n * @template {Element} [RootElementType=HTMLElement]\n */\nexport class Component {\n  /**\n   * @type {typeof Element}\n   */\n  static elementType = _self.HTMLElement\n\n  /**\n   * @type {RootElementType}\n   */\n  $root\n\n  /**\n   * Constructs a new component, validating that NHS.UK frontend is supported\n   *\n   * @param {Element | null} $root - HTML element to use for component\n   */\n  constructor($root) {\n    const childConstructor = /** @type {ComponentConstructor} */ (\n      this.constructor\n    )\n\n    if (!$root || !($root instanceof childConstructor.elementType)) {\n      throw new ElementError({\n        element: $root,\n        component: childConstructor,\n        identifier: 'Root element (`$root`)',\n        expectedType: childConstructor.elementType.name\n      })\n    }\n\n    this.$root = /** @type {RootElementType} */ ($root)\n\n    childConstructor.checkSupport()\n\n    this.checkInitialised()\n\n    const { moduleName } = childConstructor\n    this.$root.setAttribute(`data-${moduleName}-init`, '')\n  }\n\n  /**\n   * Validates whether component is already initialised\n   *\n   * @throws {InitError} when component is already initialised\n   */\n  checkInitialised() {\n    const childConstructor = /** @type {ComponentConstructor} */ (\n      this.constructor\n    )\n\n    if (isInitialised(this.$root, childConstructor.moduleName)) {\n      throw new InitError(childConstructor)\n    }\n  }\n\n  /**\n   * Validates whether components are supported\n   *\n   * @throws {SupportError} when the components are not supported\n   */\n  static checkSupport() {\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes\n   */\n  static moduleName = 'nhsuk-component'\n}\n\n/* eslint-disable jsdoc/valid-types --\n * `{new(...args: any[] ): any}` is not recognised as valid\n * https://github.com/gajus/eslint-plugin-jsdoc/issues/145#issuecomment-1308722878\n * https://github.com/jsdoc-type-pratt-parser/jsdoc-type-pratt-parser/issues/131\n **/\n\n/**\n * Component compatible class\n *\n * @template {typeof Component | typeof ConfigurableComponent} [ComponentType=typeof Component]\n * @typedef {{\n *   new(...args: ConstructorParameters<ComponentType>): InstanceType<ComponentType>,\n *   defaults?: ObjectNested,\n *   schema?: Schema<ObjectNested>,\n *   moduleName: string\n * }} CompatibleClass\n */\n\n/* eslint-enable jsdoc/valid-types */\n\n/**\n * Component constructor\n *\n * @template {typeof Component | typeof ConfigurableComponent} [ComponentType=typeof Component]\n * @typedef {CompatibleClass & ComponentType} ComponentConstructor\n */\n\n/**\n * Component initialisation options\n *\n * @typedef {object} InitOptions\n * @property {Element | Document | null} [scope] - Scope of the document to search within\n */\n\n/**\n * @import { ObjectNested, Schema } from './common/configuration/index.mjs'\n * @import { ConfigurableComponent } from './configurable-component.mjs'\n */\n","import {\n  mergeConfigs,\n  normaliseDataset\n} from './common/configuration/index.mjs'\nimport { formatErrorMessage, isObject } from './common/index.mjs'\nimport { Component } from './component.mjs'\nimport { ConfigError } from './errors/index.mjs'\n\n/**\n * Configurable base component class\n *\n * @abstract\n * @template {Partial<Record<keyof ConfigurationType, unknown>>} [ConfigurationType=ObjectNested]\n * @template {HTMLElement} [RootElementType=HTMLElement]\n * @augments Component<RootElementType>\n */\nexport class ConfigurableComponent extends Component {\n  /**\n   * @type {ConfigurationType}\n   */\n  config\n\n  /**\n   * Constructs a new component, validating that NHS.UK frontend is supported\n   *\n   * @param {Element | null} $root - HTML element to use for component\n   * @param {ConfigurationType} [config] - HTML element to use for component\n   */\n  constructor($root, config) {\n    super($root)\n\n    const childConstructor =\n      /** @type {ComponentConstructor<typeof ConfigurableComponent>} */ (\n        this.constructor\n      )\n\n    if (!isObject(childConstructor.defaults)) {\n      throw new ConfigError(\n        formatErrorMessage(\n          childConstructor,\n          'Config passed as parameter into constructor but no defaults defined'\n        )\n      )\n    }\n\n    const datasetConfig = /** @type {ConfigurationType} */ (\n      normaliseDataset(childConstructor, this.$root.dataset)\n    )\n\n    // Override defaults with JavaScript config\n    this.config = /** @type {ConfigurationType} */ (\n      mergeConfigs(childConstructor.defaults, config ?? {})\n    )\n\n    // Override merged config with dataset config\n    this.config = /** @type {ConfigurationType} */ (\n      mergeConfigs(\n        this.config,\n        this.configOverride(datasetConfig),\n        datasetConfig\n      )\n    )\n  }\n\n  /**\n   * Config override\n   *\n   * It should take a subset of configuration as input and return\n   * a new configuration object with properties that should be\n   * overridden based on the root element's dataset\n   *\n   * @abstract\n   * @param {Partial<ConfigurationType>} _datasetConfig - Config specified by dataset\n   * @returns {Partial<ConfigurationType>} Config to override by dataset\n   */\n  configOverride(_datasetConfig = {}) {\n    return {}\n  }\n}\n\n/**\n * @import { ObjectNested } from './common/configuration/index.mjs'\n * @import { ComponentConstructor } from './component.mjs'\n */\n","import { normaliseOptions } from '../../common/configuration/index.mjs'\nimport { ConfigurableComponent } from '../../configurable-component.mjs'\n\nconst DEBOUNCE_TIMEOUT_IN_SECONDS = 1\n\n/**\n * Button component\n *\n * @augments ConfigurableComponent<ButtonConfig>\n */\nexport class Button extends ConfigurableComponent {\n  /**\n   * @type {number | null}\n   */\n  debounceFormSubmitTimer = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for component\n   * @param {ButtonConfig} [config] - Button config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    /**\n     * Initialise an event listener for keydown at document level\n     * this will help listening for later inserted elements with a role=\"button\"\n     */\n    this.$root.addEventListener('keydown', (event) => this.handleKeyDown(event))\n    this.$root.addEventListener('click', (event) => this.debounce(event))\n  }\n\n  /**\n   * JavaScript 'shim' to trigger the click event of element(s) when the space key is pressed.\n   *\n   * Created since some Assistive Technologies (for example some Screenreaders)\n   * will tell a user to press space on a 'button', so this functionality needs to be shimmed\n   * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n   *\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  handleKeyDown(event) {\n    const target = event.target\n\n    // Handle space bar only\n    if (event.key !== ' ') {\n      return\n    }\n\n    // Handle elements with [role=\"button\"] only\n    if (\n      target instanceof HTMLElement &&\n      target.getAttribute('role') === 'button'\n    ) {\n      event.preventDefault()\n      target.click()\n    }\n  }\n\n  /**\n   * Debounce double-clicks\n   *\n   * If the click quickly succeeds a previous click then nothing will happen.\n   * This stops people accidentally causing multiple form submissions by\n   * double clicking buttons.\n   *\n   * @param {MouseEvent} event - Mouse click event\n   * @returns {undefined | false} Returns undefined, or false when debounced\n   */\n  debounce(event) {\n    // Check the button that was clicked has preventDoubleClick enabled\n    if (!this.config.preventDoubleClick) {\n      return\n    }\n\n    // If the timer is still running then we want to prevent the click from submitting the form\n    if (this.debounceFormSubmitTimer) {\n      event.preventDefault()\n      return false\n    }\n\n    this.debounceFormSubmitTimer = window.setTimeout(() => {\n      this.debounceFormSubmitTimer = null\n    }, DEBOUNCE_TIMEOUT_IN_SECONDS * 1000)\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes\n   */\n  static moduleName = 'nhsuk-button'\n\n  /**\n   * Button default config\n   *\n   * @see {@link ButtonConfig}\n   * @constant\n   * @type {ButtonConfig}\n   */\n  static defaults = Object.freeze({\n    preventDoubleClick: false\n  })\n\n  /**\n   * Button config schema\n   *\n   * @constant\n   * @satisfies {Schema<ButtonConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      preventDoubleClick: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Initialise button component\n *\n * @deprecated Use {@link createAll | `createAll(Button, options)`} instead.\n * @param {InitOptions & ButtonConfig} [options]\n */\nexport function initButtons(options) {\n  const { scope: $scope } = normaliseOptions(options)\n\n  const $buttons = $scope?.querySelectorAll(\n    `[data-module=\"${Button.moduleName}\"]`\n  )\n\n  $buttons?.forEach(($root) => {\n    new Button($root, options)\n  })\n}\n\n/**\n * Button config\n *\n * @typedef {object} ButtonConfig\n * @property {boolean} [preventDoubleClick=false] - Prevent accidental double\n *   clicks on submit buttons from submitting forms multiple times.\n */\n\n/**\n * @import { createAll, InitOptions } from '../../index.mjs'\n * @import { Schema } from '../../common/configuration/index.mjs'\n */\n","import { isObject } from './common/index.mjs'\n\n/**\n * Internationalisation\n *\n * Adds support for selecting messages to render, with placeholder\n * interpolation and locale-aware number formatting and pluralisation\n */\nexport class I18n {\n  /**\n   * @param {{ [key: string]: string | TranslationPluralForms }} translations - Key-value pairs of the translation strings to use.\n   * @param {object} [config] - Configuration options for the function.\n   * @param {string | null} [config.locale] - An overriding locale for the PluralRules functionality.\n   */\n  constructor(translations = {}, config = {}) {\n    // Make list of translations available throughout function\n    this.translations = translations\n\n    // The locale to use for PluralRules and NumberFormat\n    this.locale = config.locale ?? (document.documentElement.lang || 'en')\n  }\n\n  /**\n   * The most used function - takes the key for a given piece of UI text and\n   * returns the appropriate string.\n   *\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {{ [key: string]: unknown }} [options] - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The appropriate translation string.\n   * @throws {Error} Lookup key required\n   * @throws {Error} Options required for `${}` placeholders\n   */\n  t(lookupKey, options) {\n    if (!lookupKey) {\n      // Print a console error if no lookup key has been provided\n      throw new Error('i18n: lookup key missing')\n    }\n\n    // Fetch the translation for that lookup key\n    let translation = this.translations[lookupKey]\n\n    // If the `count` option is set, determine which plural suffix is needed and\n    // change the lookupKey to match. We check to see if it's numeric instead of\n    // falsy, as this could legitimately be 0.\n    if (typeof options?.count === 'number' && isObject(translation)) {\n      const translationPluralForm =\n        translation[this.getPluralSuffix(lookupKey, options.count)]\n\n      // Update translation with plural suffix\n      if (translationPluralForm) {\n        translation = translationPluralForm\n      }\n    }\n\n    if (typeof translation === 'string') {\n      // Check for ${} placeholders in the translation string\n      // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n      if (translation.match(/%{(.\\S+)}/)) {\n        if (!options) {\n          throw new Error(\n            'i18n: cannot replace placeholders in string if no option data provided'\n          )\n        }\n\n        return this.replacePlaceholders(translation, options)\n      }\n\n      return translation\n    }\n\n    // If the key wasn't found in our translations object,\n    // return the lookup key itself as the fallback\n    return lookupKey\n  }\n\n  /**\n   * Takes a translation string with placeholders, and replaces the placeholders\n   * with the provided data\n   *\n   * @param {string} translationString - The translation string\n   * @param {{ [key: string]: unknown }} options - Any options passed with the translation string, e.g: for string interpolation.\n   * @returns {string} The translation string to output, with $\\{\\} placeholders replaced\n   */\n  replacePlaceholders(translationString, options) {\n    const formatter = Intl.NumberFormat.supportedLocalesOf(this.locale).length\n      ? new Intl.NumberFormat(this.locale)\n      : undefined\n\n    return translationString.replace(\n      /%{(.\\S+)}/g,\n\n      /**\n       * Replace translation string placeholders\n       *\n       * @param {string} placeholderWithBraces - Placeholder with braces\n       * @param {string} placeholderKey - Placeholder key\n       * @returns {string} Placeholder value\n       */\n      function (placeholderWithBraces, placeholderKey) {\n        if (Object.prototype.hasOwnProperty.call(options, placeholderKey)) {\n          const placeholderValue = options[placeholderKey]\n\n          // If a user has passed `false` as the value for the placeholder\n          // treat it as though the value should not be displayed\n          if (\n            placeholderValue === false ||\n            (typeof placeholderValue !== 'number' &&\n              typeof placeholderValue !== 'string')\n          ) {\n            return ''\n          }\n\n          // If the placeholder's value is a number, localise the number formatting\n          if (typeof placeholderValue === 'number') {\n            return formatter\n              ? formatter.format(placeholderValue)\n              : `${placeholderValue}`\n          }\n\n          return placeholderValue\n        }\n\n        throw new Error(\n          `i18n: no data found to replace ${placeholderWithBraces} placeholder in string`\n        )\n      }\n    )\n  }\n\n  /**\n   * Check to see if the browser supports Intl.PluralRules\n   *\n   * It requires all conditions to be met in order to be supported:\n   * - The implementation of Intl supports PluralRules (NOT true in Safari 10â€“12)\n   * - The browser/OS has plural rules for the current locale (browser dependent)\n   *\n   * {@link https://browsersl.ist/#q=supports+es6-module+and+not+supports+intl-pluralrules}\n   *\n   * @returns {boolean} Returns true if all conditions are met. Returns false otherwise.\n   */\n  hasIntlPluralRulesSupport() {\n    return Boolean(\n      'PluralRules' in window.Intl &&\n        Intl.PluralRules.supportedLocalesOf(this.locale).length\n    )\n  }\n\n  /**\n   * Get the appropriate suffix for the plural form.\n   *\n   * Uses Intl.PluralRules (or our own fallback implementation) to get the\n   * 'preferred' form to use for the given count.\n   *\n   * Checks that a translation has been provided for that plural form â€“ if it\n   * hasn't, it'll fall back to the 'other' plural form (unless that doesn't exist\n   * either, in which case an error will be thrown)\n   *\n   * @param {string} lookupKey - The lookup key of the string to use.\n   * @param {number} count - Number used to determine which pluralisation to use.\n   * @returns {PluralRule} The suffix associated with the correct pluralisation for this locale.\n   * @throws {Error} Plural form `.other` required when preferred plural form is missing\n   */\n  getPluralSuffix(lookupKey, count) {\n    // Validate that the number is actually a number.\n    //\n    // Number(count) will turn anything that can't be converted to a Number type\n    // into 'NaN'. isFinite filters out NaN, as it isn't a finite number.\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-conversion\n    count = Number(count)\n    if (!isFinite(count)) {\n      return 'other'\n    }\n\n    // Fetch the translation for that lookup key\n    const translation = this.translations[lookupKey]\n\n    // Check to verify that all the requirements for Intl.PluralRules are met.\n    // If so, we can use that instead of our custom implementation. Otherwise,\n    // use the hardcoded fallback.\n    const preferredForm = this.hasIntlPluralRulesSupport()\n      ? new Intl.PluralRules(this.locale).select(count)\n      : 'other'\n\n    // Use the correct plural form if provided\n    if (isObject(translation)) {\n      if (preferredForm in translation) {\n        return preferredForm\n        // Fall back to `other` if the plural form is missing, but log a warning\n        // to the console\n      } else if ('other' in translation) {\n        console.warn(\n          `i18n: Missing plural form \".${preferredForm}\" for \"${this.locale}\" locale. Falling back to \".other\".`\n        )\n\n        return 'other'\n      }\n    }\n\n    // If the required `other` plural form is missing, all we can do is error\n    throw new Error(\n      `i18n: Plural form \".other\" is required for \"${this.locale}\" locale`\n    )\n  }\n}\n\n/**\n * Plural rule category mnemonic tags\n *\n * @typedef {'zero' | 'one' | 'two' | 'few' | 'many' | 'other'} PluralRule\n */\n\n/**\n * Translated message by plural rule they correspond to.\n *\n * Allows to group pluralised messages under a single key when passing\n * translations to a component's constructor\n *\n * @typedef {object} TranslationPluralForms\n * @property {string} [other] - General plural form\n * @property {string} [zero] - Plural form used with 0\n * @property {string} [one] - Plural form used with 1\n * @property {string} [two] - Plural form used with 2\n * @property {string} [few] - Plural form used for a few\n * @property {string} [many] - Plural form used for many\n */\n","import { closestAttributeValue } from '../../common/closest-attribute-value.mjs'\nimport {\n  normaliseOptions,\n  validateConfig\n} from '../../common/configuration/index.mjs'\nimport { formatErrorMessage } from '../../common/index.mjs'\nimport { ConfigurableComponent } from '../../configurable-component.mjs'\nimport { ConfigError, ElementError } from '../../errors/index.mjs'\nimport { I18n } from '../../i18n.mjs'\n\n/**\n * Character count component\n *\n * Tracks the number of characters or words in the `.nhsuk-js-character-count`\n * `<textarea>` inside the element. Displays a message with the remaining number\n * of characters/words available, or the number of characters/words in excess.\n *\n * You can configure the message to only appear after a certain percentage\n * of the available characters/words has been entered.\n *\n * @augments ConfigurableComponent<CharacterCountConfig>\n */\nexport class CharacterCount extends ConfigurableComponent {\n  /**\n   * @type {number | null}\n   */\n  lastInputTimestamp = null\n  lastInputValue = ''\n\n  /**\n   * @type {number | null}\n   */\n  valueChecker = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for component\n   * @param {CharacterCountConfig} [config] - Character count config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    const $textarea = this.$root.querySelector('.nhsuk-js-character-count')\n    if (\n      !(\n        $textarea instanceof HTMLTextAreaElement ||\n        $textarea instanceof HTMLInputElement\n      )\n    ) {\n      throw new ElementError({\n        component: CharacterCount,\n        element: $textarea,\n        expectedType: 'HTMLTextareaElement or HTMLInputElement',\n        identifier: 'Form field (`.nhsuk-js-character-count`)'\n      })\n    }\n\n    // Check for valid config\n    const errors = validateConfig(CharacterCount.schema, this.config)\n    if (errors[0]) {\n      throw new ConfigError(formatErrorMessage(CharacterCount, errors[0]))\n    }\n\n    this.i18n = new I18n(this.config.i18n, {\n      // Read the fallback if necessary rather than have it set in the defaults\n      locale: closestAttributeValue(this.$root, 'lang')\n    })\n\n    // Determine the limit attribute (characters or words)\n    this.maxLength = this.config.maxwords ?? this.config.maxlength ?? Infinity\n\n    this.$textarea = $textarea\n\n    const textareaDescriptionId = `${this.$textarea.id}-info`\n    const $textareaDescription = document.getElementById(textareaDescriptionId)\n    if (!$textareaDescription) {\n      throw new ElementError({\n        component: CharacterCount,\n        element: $textareaDescription,\n        identifier: `Count message (\\`id=\"${textareaDescriptionId}\"\\`)`\n      })\n    }\n\n    // Pre-existing validation error rendered from server\n    this.$errorMessage = this.$root.querySelector('.nhsuk-error-message')\n\n    // Inject a description for the textarea if none is present already\n    // for when the component was rendered with no maxlength, maxwords\n    // nor custom textareaDescriptionText\n    if (/^\\s*$/.exec($textareaDescription.textContent)) {\n      $textareaDescription.textContent = this.i18n.t('textareaDescription', {\n        count: this.maxLength\n      })\n    }\n\n    // Move the textarea description to be immediately after the textarea\n    // Kept for backwards compatibility\n    this.$textarea.insertAdjacentElement('afterend', $textareaDescription)\n\n    // Create the *screen reader* specific live-updating counter\n    // This doesn't need any styling classes, as it is never visible\n    const $screenReaderCountMessage = document.createElement('div')\n    $screenReaderCountMessage.className =\n      'nhsuk-character-count__sr-status nhsuk-u-visually-hidden'\n    $screenReaderCountMessage.setAttribute('aria-live', 'polite')\n    this.$screenReaderCountMessage = $screenReaderCountMessage\n    $textareaDescription.insertAdjacentElement(\n      'afterend',\n      $screenReaderCountMessage\n    )\n\n    // Create our live-updating counter element, copying the classes from the\n    // textarea description for backwards compatibility as these may have been\n    // configured\n    const $visibleCountMessage = document.createElement('div')\n    $visibleCountMessage.className = $textareaDescription.className\n    $visibleCountMessage.classList.add('nhsuk-character-count__status')\n    $visibleCountMessage.setAttribute('aria-hidden', 'true')\n    this.$visibleCountMessage = $visibleCountMessage\n    $textareaDescription.insertAdjacentElement('afterend', $visibleCountMessage)\n\n    // Hide the textarea description\n    $textareaDescription.classList.add('nhsuk-u-visually-hidden')\n\n    // Remove hard limit if set\n    this.$textarea.removeAttribute('maxlength')\n\n    this.bindChangeEvents()\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.updateCountMessage())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so update now too.\n    this.updateCountMessage()\n  }\n\n  /**\n   * Character count config override\n   *\n   * To ensure data-attributes take complete precedence, even if they change\n   * the type of count, we need to reset the `maxlength` and `maxwords` from\n   * the JavaScript config.\n   *\n   * @param {Partial<CharacterCountConfig>} datasetConfig - Config specified by dataset\n   * @returns {Partial<CharacterCountConfig>} Config to override by dataset\n   */\n  configOverride(datasetConfig) {\n    let configOverrides = {}\n    if ('maxwords' in datasetConfig || 'maxlength' in datasetConfig) {\n      configOverrides = {\n        maxlength: undefined,\n        maxwords: undefined\n      }\n    }\n\n    return configOverrides\n  }\n\n  /**\n   * Count the number of characters (or words, if `config.maxwords` is set)\n   * in the given text\n   *\n   * @param {string} text - The text to count the characters of\n   * @returns {number} the number of characters (or words) in the text\n   */\n  count(text) {\n    if (this.config.maxwords) {\n      const tokens = text.match(/\\S+/g) ?? [] // Matches consecutive non-whitespace chars\n      return tokens.length\n    }\n\n    return text.length\n  }\n\n  /**\n   * Bind change events\n   *\n   * Set up event listeners on the $textarea so that the count messages update\n   * when the user types.\n   */\n  bindChangeEvents() {\n    this.$textarea.addEventListener('keyup', () => this.handleKeyUp())\n\n    // Bind focus/blur events to start/stop polling\n    this.$textarea.addEventListener('focus', () => this.handleFocus())\n    this.$textarea.addEventListener('blur', () => this.handleBlur())\n  }\n\n  /**\n   * Update count message if textarea value has changed\n   */\n  checkIfValueChanged() {\n    if (this.$textarea.value !== this.lastInputValue) {\n      this.lastInputValue = this.$textarea.value\n      this.updateCountMessage()\n    }\n  }\n\n  /**\n   * Update count message\n   *\n   * Helper function to update both the visible and screen reader-specific\n   * counters simultaneously (e.g. on init)\n   */\n  updateCountMessage() {\n    this.updateVisibleCountMessage()\n    this.updateScreenReaderCountMessage()\n  }\n\n  /**\n   * Update visible count message\n   */\n  updateVisibleCountMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const isError = remainingNumber < 0\n\n    // If input is over the threshold, remove the disabled class which renders\n    // the counter invisible.\n    this.$visibleCountMessage.classList.toggle(\n      'nhsuk-character-count__message--disabled',\n      !this.isOverThreshold()\n    )\n\n    // Update styles\n    if (!this.$errorMessage) {\n      // Only toggle the textarea error class if there isn't an error message\n      // already, as it may be unrelated to the limit (eg: allowed characters)\n      // and would set the border colour back to black.\n      this.$textarea.classList.toggle('nhsuk-textarea--error', isError)\n    }\n    this.$visibleCountMessage.classList.toggle('nhsuk-error-message', isError)\n    this.$visibleCountMessage.classList.toggle('nhsuk-hint', !isError)\n\n    // Update message\n    this.$visibleCountMessage.textContent = this.formattedUpdateMessage()\n  }\n\n  /**\n   * Update screen reader count message\n   */\n  updateScreenReaderCountMessage() {\n    // If over the threshold, remove the aria-hidden attribute, allowing screen\n    // readers to announce the content of the element.\n    if (this.isOverThreshold()) {\n      this.$screenReaderCountMessage.removeAttribute('aria-hidden')\n    } else {\n      this.$screenReaderCountMessage.setAttribute('aria-hidden', 'true')\n    }\n\n    // Update message\n    this.$screenReaderCountMessage.textContent = this.formattedUpdateMessage()\n  }\n\n  /**\n   * Get count message\n   *\n   * @returns {string} Status message\n   */\n  formattedUpdateMessage() {\n    const remainingNumber = this.maxLength - this.count(this.$textarea.value)\n    const countType = this.config.maxwords ? 'words' : 'characters'\n    return this.formatCountMessage(remainingNumber, countType)\n  }\n\n  /**\n   * Formats the message shown to users according to what's counted\n   * and how many remain\n   *\n   * @param {number} remainingNumber - The number of words/characaters remaining\n   * @param {string} countType - \"words\" or \"characters\"\n   * @returns {string} Status message\n   */\n  formatCountMessage(remainingNumber, countType) {\n    if (remainingNumber === 0) {\n      return this.i18n.t(`${countType}AtLimit`)\n    }\n\n    const translationKeySuffix =\n      remainingNumber < 0 ? 'OverLimit' : 'UnderLimit'\n\n    return this.i18n.t(`${countType}${translationKeySuffix}`, {\n      count: Math.abs(remainingNumber)\n    })\n  }\n\n  /**\n   * Check if count is over threshold\n   *\n   * Checks whether the value is over the configured threshold for the input.\n   * If there is no configured threshold, it is set to 0 and this function will\n   * always return true.\n   *\n   * @returns {boolean} true if the current count is over the config.threshold\n   *   (or no threshold is set)\n   */\n  isOverThreshold() {\n    // No threshold means we're always above threshold so save some computation\n    if (!this.config.threshold) {\n      return true\n    }\n\n    // Determine the remaining number of characters/words\n    const currentLength = this.count(this.$textarea.value)\n    const maxLength = this.maxLength\n\n    const thresholdValue = (maxLength * this.config.threshold) / 100\n\n    return thresholdValue <= currentLength\n  }\n\n  /**\n   * Handle key up event\n   *\n   * Update the visible character counter and keep track of when the last update\n   * happened for each keypress\n   */\n  handleKeyUp() {\n    this.updateVisibleCountMessage()\n    this.lastInputTimestamp = Date.now()\n  }\n\n  /**\n   * Handle focus event\n   *\n   * Speech recognition software such as Dragon NaturallySpeaking will modify\n   * the fields by directly changing its `value`. These changes don't trigger\n   * events in JavaScript, so we need to poll to handle when and if they occur.\n   *\n   * Once the keyup event hasn't been detected for at least 1000 ms (1s), check\n   * if the textarea value has changed and update the count message if it has.\n   *\n   * This is so that the update triggered by the manual comparison doesn't\n   * conflict with debounced KeyboardEvent updates.\n   */\n  handleFocus() {\n    this.valueChecker = window.setInterval(() => {\n      if (\n        !this.lastInputTimestamp ||\n        Date.now() - 500 >= this.lastInputTimestamp\n      ) {\n        this.checkIfValueChanged()\n      }\n    }, 1000)\n  }\n\n  /**\n   * Handle blur event\n   *\n   * Stop checking the textarea value once the textarea no longer has focus\n   */\n  handleBlur() {\n    // Cancel value checking on blur\n    if (this.valueChecker) {\n      window.clearInterval(this.valueChecker)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes\n   */\n  static moduleName = 'nhsuk-character-count'\n\n  /**\n   * Character count default config\n   *\n   * @see {@link CharacterCountConfig}\n   * @constant\n   * @type {CharacterCountConfig}\n   */\n  static defaults = Object.freeze({\n    threshold: 0,\n    i18n: {\n      // Characters\n      charactersUnderLimit: {\n        one: 'You have %{count} character remaining',\n        other: 'You have %{count} characters remaining'\n      },\n      charactersAtLimit: 'You have 0 characters remaining',\n      charactersOverLimit: {\n        one: 'You have %{count} character too many',\n        other: 'You have %{count} characters too many'\n      },\n      // Words\n      wordsUnderLimit: {\n        one: 'You have %{count} word remaining',\n        other: 'You have %{count} words remaining'\n      },\n      wordsAtLimit: 'You have 0 words remaining',\n      wordsOverLimit: {\n        one: 'You have %{count} word too many',\n        other: 'You have %{count} words too many'\n      },\n      textareaDescription: {\n        other: ''\n      }\n    }\n  })\n\n  /**\n   * Character count config schema\n   *\n   * @constant\n   * @satisfies {Schema<CharacterCountConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      i18n: { type: 'object' },\n      maxwords: { type: 'number' },\n      maxlength: { type: 'number' },\n      threshold: { type: 'number' }\n    },\n    anyOf: [\n      {\n        required: ['maxwords'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      },\n      {\n        required: ['maxlength'],\n        errorMessage: 'Either \"maxlength\" or \"maxwords\" must be provided'\n      }\n    ]\n  })\n}\n\n/**\n * Initialise character count component\n *\n * @deprecated Use {@link createAll | `createAll(CharacterCount, options)`} instead.\n * @param {InitOptions & CharacterCountConfig} [options]\n */\nexport function initCharacterCounts(options) {\n  const { scope: $scope } = normaliseOptions(options)\n\n  const $characterCounts = $scope?.querySelectorAll(\n    `[data-module=\"${CharacterCount.moduleName}\"]`\n  )\n\n  $characterCounts?.forEach(($root) => {\n    new CharacterCount($root, options)\n  })\n}\n\n/**\n * Character count config\n *\n * @see {@link CharacterCount.defaults}\n * @typedef {object} CharacterCountConfig\n * @property {number} [maxlength] - The maximum number of characters.\n *   If maxwords is provided, the maxlength option will be ignored.\n * @property {number} [maxwords] - The maximum number of words. If maxwords is\n *   provided, the maxlength option will be ignored.\n * @property {number} [threshold=0] - The percentage value of the limit at\n *   which point the count message is displayed. If this attribute is set, the\n *   count message will be hidden by default.\n * @property {CharacterCountTranslations} [i18n=CharacterCount.defaults.i18n] - Character count translations\n */\n\n/**\n * Character count translations\n *\n * @see {@link CharacterCount.defaults.i18n}\n * @see {@link https://github.com/nhsuk/nhsuk-frontend/blob/main/docs/configuration/localisation.md}\n * @typedef {object} CharacterCountTranslations\n *\n * Messages shown to users as they type. It provides feedback on how many words\n * or characters they have remaining or if they are over the limit. This also\n * includes a message used as an accessible description for the textarea.\n * @property {TranslationPluralForms} [charactersUnderLimit] - Message displayed\n *   when the number of characters is under the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a pluralised list of messages.\n * @property {string} [charactersAtLimit] - Message displayed when the number of\n *   characters reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [charactersOverLimit] - Message displayed\n *   when the number of characters is over the configured maximum, `maxlength`.\n *   This message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining characters. This is a pluralised list of messages.\n * @property {TranslationPluralForms} [wordsUnderLimit] - Message displayed when\n *   the number of words is under the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a pluralised list of messages.\n * @property {string} [wordsAtLimit] - Message displayed when the number of\n *   words reaches the configured maximum, `maxlength`. This message is\n *   displayed visually and through assistive technologies.\n * @property {TranslationPluralForms} [wordsOverLimit] - Message displayed when\n *   the number of words is over the configured maximum, `maxlength`. This\n *   message is displayed visually and through assistive technologies. The\n *   component will replace the `%{count}` placeholder with the number of\n *   remaining words. This is a pluralised list of messages.\n * @property {TranslationPluralForms} [textareaDescription] - Message made\n *   available to assistive technologies, if none is already present in the\n *   HTML, to describe that the component accepts only a limited amount of\n *   content. It is visible on the page when JavaScript is unavailable. The\n *   component will replace the `%{count}` placeholder with the value of the\n *   `maxlength` or `maxwords` parameter.\n */\n\n/**\n * @import { TranslationPluralForms } from '../../i18n.mjs'\n * @import { createAll, InitOptions } from '../../index.mjs'\n * @import { Schema } from '../../common/configuration/index.mjs'\n */\n","import { normaliseOptions } from '../../common/configuration/index.mjs'\nimport { toggleConditionalInput } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Checkboxes component\n *\n * Conditionally show content when a checkbox button is checked\n *\n * Test at {@link http://localhost:3000/nhsuk-frontend/components/checkboxes/with-conditional-content/}\n */\nexport class Checkboxes extends Component {\n  /**\n   * @param {Element | null} $root - HTML element to use for component\n   */\n  constructor($root) {\n    super($root)\n\n    const $inputs = this.$root.querySelectorAll('input[type=\"checkbox\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        component: Checkboxes,\n        identifier: 'Form inputs (`<input type=\"checkbox\">`)'\n      })\n    }\n\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('aria-controls')\n\n      // Skip checkboxes without aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          component: Checkboxes,\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all checkboxes in this component.\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  syncConditionalRevealWithInputState($input) {\n    toggleConditionalInput($input, 'nhsuk-checkboxes__conditional--hidden')\n  }\n\n  /**\n   * Uncheck other checkboxes\n   *\n   * Find any other checkbox inputs with the checkbox group value, and uncheck them.\n   * This is useful for when a â€œNone of these\" checkbox is checked.\n   *\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckAllInputsExcept($input) {\n    const { checkboxExclusiveGroup: exclusiveGroup } = $input.dataset\n\n    const selectorGroup = exclusiveGroup\n      ? `[data-checkbox-exclusive-group=\"${exclusiveGroup}\"]`\n      : `[name=\"${$input.name}\"]`\n\n    const allInputsWithSameName = document.querySelectorAll(\n      `input[type=\"checkbox\"]${selectorGroup}`\n    )\n\n    allInputsWithSameName.forEach(($inputWithSameName) => {\n      const hasSameFormOwner = $input.form === $inputWithSameName.form\n\n      // Uncheck all with same exclusive group by default, otherwise fall back to\n      // GOV.UK Frontend behaviour to uncheck all with the same name attribute\n      if (hasSameFormOwner && $inputWithSameName !== $input) {\n        this.setInputState($inputWithSameName, false, exclusiveGroup)\n      }\n    })\n  }\n\n  /**\n   * Uncheck exclusive inputs\n   *\n   * Find any checkbox inputs with the same checkbox group value and the 'exclusive' behaviour,\n   * and uncheck them. This helps prevent someone checking both a regular checkbox and a\n   * \"None of these\" checkbox in the same fieldset.\n   *\n   * @param {HTMLInputElement} $input - Checkbox input\n   */\n  unCheckExclusiveInputs($input) {\n    const { checkboxExclusiveGroup: exclusiveGroup } = $input.dataset\n\n    const selectorGroup = exclusiveGroup\n      ? `[data-checkbox-exclusive-group=\"${exclusiveGroup}\"]`\n      : `[name=\"${$input.name}\"]`\n\n    const allInputsWithSameNameAndExclusiveBehaviour =\n      document.querySelectorAll(\n        `input[type=\"checkbox\"][data-checkbox-exclusive]${selectorGroup}`\n      )\n\n    allInputsWithSameNameAndExclusiveBehaviour.forEach(($exclusiveInput) => {\n      const hasSameFormOwner = $input.form === $exclusiveInput.form\n\n      // Uncheck the exclusive input only. When no group is set, fall back to\n      // GOV.UK Frontend behaviour and locate the exclusive input by name\n      if (hasSameFormOwner) {\n        this.setInputState($exclusiveInput, false, exclusiveGroup)\n      }\n    })\n  }\n\n  /**\n   * Set input state, optionally for matching exclusive group only\n   *\n   * @param {HTMLInputElement} $input - Checkbox input\n   * @param {boolean} checked - Checkbox checked state\n   * @param {string} [exclusiveGroup] - Set state for matching exclusive group only (optional)\n   */\n  setInputState($input, checked, exclusiveGroup) {\n    const { checkboxExclusiveGroup } = $input.dataset\n\n    // Skip input when exclusive group does not match\n    if (\n      exclusiveGroup &&\n      checkboxExclusiveGroup &&\n      checkboxExclusiveGroup !== exclusiveGroup\n    ) {\n      return\n    }\n\n    $input.checked = checked\n    this.syncConditionalRevealWithInputState($input)\n  }\n\n  /**\n   * Toggle classes and attributes\n   *\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't checkbox inputs\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'checkbox'\n    ) {\n      return\n    }\n\n    // If the checkbox conditionally-reveals some content, sync the state\n    const hasAriaControls = $clickedInput.getAttribute('aria-controls')\n    if (hasAriaControls) {\n      this.syncConditionalRevealWithInputState($clickedInput)\n    }\n\n    // No further behaviour needed for unchecking\n    if (!$clickedInput.checked) {\n      return\n    }\n\n    // Handle 'exclusive' checkbox behaviour (ie \"None of these\")\n    if ('checkboxExclusive' in $clickedInput.dataset) {\n      this.unCheckAllInputsExcept($clickedInput)\n    } else {\n      this.unCheckExclusiveInputs($clickedInput)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes\n   */\n  static moduleName = 'nhsuk-checkboxes'\n}\n\n/**\n * Initialise checkboxes component\n *\n * @deprecated Use {@link createAll | `createAll(Checkboxes)`} instead.\n * @param {InitOptions} [options]\n */\nexport function initCheckboxes(options) {\n  const { scope: $scope } = normaliseOptions(options)\n\n  const $checkboxes = $scope?.querySelectorAll(\n    `[data-module=\"${Checkboxes.moduleName}\"]`\n  )\n\n  $checkboxes?.forEach(($root) => {\n    new Checkboxes($root)\n  })\n}\n\n/**\n * @import { createAll, InitOptions } from '../../index.mjs'\n */\n","import { normaliseOptions } from '../../common/configuration/index.mjs'\nimport { formatErrorMessage, setFocus } from '../../common/index.mjs'\nimport { ConfigurableComponent } from '../../configurable-component.mjs'\n\n/**\n * Error summary component\n *\n * Adapted from https://github.com/alphagov/govuk-frontend/blob/v2.13.0/src/components/error-summary/error-summary.js\n *\n * @augments ConfigurableComponent<ErrorSummaryConfig>\n */\nexport class ErrorSummary extends ConfigurableComponent {\n  /**\n   * @param {Element | null} $root - HTML element to use for component\n   * @param {ErrorSummaryConfig} [config] - Error summary config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    /**\n     * Focus the error summary\n     */\n    if (!this.config.disableAutoFocus) {\n      setFocus(this.$root)\n    }\n\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Error summary config override\n   *\n   * @param {Partial<ErrorSummaryConfig>} _datasetConfig - Config specified by dataset\n   * @returns {Partial<ErrorSummaryConfig>} Config to override by dataset\n   */\n  configOverride(_datasetConfig) {\n    let configOverrides = /** @type {Partial<ErrorSummaryConfig>} */ ({})\n\n    if ('focusOnPageLoad' in this.config) {\n      console.warn(\n        formatErrorMessage(\n          ErrorSummary,\n          'Option `focusOnPageLoad` is deprecated. Use `disableAutoFocus` instead.'\n        )\n      )\n\n      configOverrides.disableAutoFocus = !this.config.focusOnPageLoad\n    }\n\n    return configOverrides\n  }\n\n  /**\n   * Get associated legend or label\n   *\n   * Returns the first element that exists from this list:\n   *\n   * - The `<legend>` associated with the closest `<fieldset>` ancestor, as long\n   *   as the top of it is no more than half a viewport height away from the\n   *   bottom of the input\n   * - The first `<label>` that is associated with the input using for=\"inputId\"\n   * - The closest parent `<label>`\n   *\n   * @param {Element} $input - The input\n   * @returns {Element | null} Associated legend or label, or null if no\n   *   associated legend or label can be found\n   */\n  getAssociatedLegendOrLabel($input) {\n    const $fieldset = $input.closest('fieldset')\n\n    if ($fieldset) {\n      const $legends = $fieldset.getElementsByTagName('legend')\n\n      if ($legends.length) {\n        const $candidateLegend = $legends[0]\n\n        // If the input type is radio or checkbox, always use the legend if\n        // there is one.\n        if (\n          $input instanceof HTMLInputElement &&\n          ($input.type === 'checkbox' || $input.type === 'radio')\n        ) {\n          return $candidateLegend\n        }\n\n        // For other input types, only scroll to the fieldsetâ€™s legend (instead\n        // of the label associated with the input) if the input would end up in\n        // the top half of the screen.\n        //\n        // This should avoid situations where the input either ends up off the\n        // screen, or obscured by a software keyboard.\n        const legendTop = $candidateLegend.getBoundingClientRect().top\n        const inputRect = $input.getBoundingClientRect()\n\n        // If the browser doesn't support Element.getBoundingClientRect().height\n        // or window.innerHeight (like IE8), bail and just link to the label.\n        if (inputRect.height && window.innerHeight) {\n          const inputBottom = inputRect.top + inputRect.height\n\n          if (inputBottom - legendTop < window.innerHeight / 2) {\n            return $candidateLegend\n          }\n        }\n      }\n    }\n\n    return (\n      document.querySelector(`label[for='${$input.getAttribute('id')}']`) ??\n      $input.closest('label')\n    )\n  }\n\n  /**\n   * Focus the target element\n   *\n   * By default, the browser will scroll the target into view. Because our\n   * labels or legends appear above the input, this means the user will be\n   * presented with an input without any context, as the label or legend will be\n   * off the top of the screen.\n   *\n   * Manually handling the click event, scrolling the question into view and\n   * then focussing the element solves this.\n   *\n   * This also results in the label and/or legend being announced correctly in\n   * NVDA (as tested in 2018.3.2) - without this only the field type is\n   * announced (e.g. \"Edit, has autocomplete\").\n   *\n   * @param {EventTarget} $target - Event target\n   * @returns {boolean} True if the target was able to be focussed\n   */\n  focusTarget($target) {\n    // If the element that was clicked was not a link, return early\n    if (!($target instanceof HTMLAnchorElement)) {\n      return false\n    }\n\n    const inputId = $target.hash.replace('#', '')\n    if (!inputId) {\n      return false\n    }\n\n    const $input = document.getElementById(inputId)\n    if (!$input) {\n      return false\n    }\n\n    const $legendOrLabel = this.getAssociatedLegendOrLabel($input)\n    if (!$legendOrLabel) {\n      return false\n    }\n\n    // Scroll the legend or label into view *before* calling focus on the input\n    // to avoid extra scrolling in browsers that don't support `preventScroll`\n    // (which at time of writing is most of them...)\n    $legendOrLabel.scrollIntoView()\n    $input.focus({ preventScroll: true })\n\n    return true\n  }\n\n  /**\n   * Click event handler\n   *\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $target = event.target\n    if ($target && this.focusTarget($target)) {\n      event.preventDefault()\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes\n   */\n  static moduleName = 'nhsuk-error-summary'\n\n  /**\n   * Error summary default config\n   *\n   * @see {@link ErrorSummaryConfig}\n   * @constant\n   * @type {ErrorSummaryConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n\n  /**\n   * Error summary config schema\n   *\n   * @constant\n   * @satisfies {Schema<ErrorSummaryConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      focusOnPageLoad: { type: 'boolean' }, // Deprecated\n      disableAutoFocus: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Initialise error summary component\n *\n * @deprecated Use {@link createAll | `createAll(ErrorSummary, options)`} instead.\n * @param {InitOptions & ErrorSummaryConfig} [options]\n */\nexport function initErrorSummary(options) {\n  const { scope: $scope } = normaliseOptions(options)\n\n  const $root = $scope?.querySelector(\n    `[data-module=\"${ErrorSummary.moduleName}\"]`\n  )\n\n  if (!$root) {\n    return\n  }\n\n  new ErrorSummary($root, options)\n}\n\n/**\n * Error summary config\n *\n * @see {@link ErrorSummary.defaults}\n * @typedef {object} ErrorSummaryConfig\n * @property {boolean} [focusOnPageLoad=true] - Deprecated. Use `disableAutoFocus` instead.\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the error\n *   summary will not be focussed when the page loads.\n */\n\n/**\n * @import { createAll, InitOptions } from '../../index.mjs'\n * @import { Schema } from '../../common/configuration/index.mjs'\n */\n","import { normaliseOptions } from '../../common/configuration/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Header component\n */\nexport class Header extends Component {\n  /** @type {HTMLElement | null} */\n  $navigation = null\n\n  /** @type {HTMLElement | null} */\n  $navigationList = null\n\n  /** @type {NodeListOf<HTMLElement> | null} */\n  $navigationItems = null\n\n  /** @type {HTMLElement | null} */\n  $menu = null\n\n  /** @type {HTMLButtonElement | null} */\n  $menuToggle = null\n\n  /** @type {HTMLElement | null} */\n  $menuList = null\n\n  width = 0\n\n  /**\n   * @type {{ element: HTMLElement, right: number }[]}\n   */\n  breakpoints = []\n\n  /**\n   * @type {number | null}\n   */\n  updateNavigationTimer = null\n\n  menuIsEnabled = false\n  menuIsOpen = false\n\n  /**\n   * @param {Element | null} $root - HTML element to use for component\n   */\n  constructor($root) {\n    super($root)\n\n    const $navigation = this.$root.querySelector('.nhsuk-header__navigation')\n    const $navigationList = this.$root.querySelector(\n      '.nhsuk-header__navigation-list'\n    )\n\n    const $navigationItems = /** @type {NodeListOf<HTMLElement>} */ (\n      this.$root.querySelectorAll('.nhsuk-header__navigation-item')\n    )\n\n    const $menu = this.$root.querySelector('.nhsuk-header__menu')\n    const $menuToggle = this.$root.querySelector('.nhsuk-header__menu-toggle')\n\n    // Check for navigation (optional)\n    if ($navigation) {\n      if (!($navigation instanceof HTMLElement)) {\n        throw new ElementError({\n          component: Header,\n          identifier: 'Navigation (`<nav class=\"nhsuk-header__navigation\">`)'\n        })\n      }\n\n      if (!$navigationList || !($navigationList instanceof HTMLElement)) {\n        throw new ElementError({\n          component: Header,\n          identifier: 'List (`<ul class=\"nhsuk-header__navigation-list\">`)'\n        })\n      }\n\n      if (!$navigationItems.length) {\n        throw new ElementError({\n          component: Header,\n          identifier:\n            'List items (`<li class=\"nhsuk-header__navigation-item\">`)'\n        })\n      }\n\n      if (!$menu || !($menu instanceof HTMLElement)) {\n        throw new ElementError({\n          component: Header,\n          identifier: 'Menu item (`<li class=\"nhsuk-header__menu\" hidden>`)'\n        })\n      }\n\n      if (!$menuToggle || !($menuToggle instanceof HTMLButtonElement)) {\n        throw new ElementError({\n          component: Header,\n          identifier:\n            'Menu button (`<button class=\"nhsuk-header__menu-toggle\">`)',\n          expectedType: 'HTMLButtonElement'\n        })\n      }\n\n      this.$navigation = $navigation\n      this.$navigationList = $navigationList\n      this.$navigationItems = $navigationItems\n      this.$menu = $menu\n      this.$menuToggle = $menuToggle\n      this.$menuList = document.createElement('ul')\n    }\n\n    // Save bound functions so we can remove event listeners when unnecessary\n    this.handleEscapeKey = this.onEscapeKey.bind(this)\n    this.handleUpdateNavigation = this.updateNavigation.bind(this)\n    this.handleToggleMenu = this.toggleMenu.bind(this)\n\n    this.setupNavigation()\n    this.updateNavigation()\n  }\n\n  /**\n   * Reset navigation\n   *\n   * Calculate available space by summing the width of each navigation item\n   */\n  resetNavigation() {\n    const { $menu, $navigationList } = this\n    if (!$menu || !$navigationList) {\n      return\n    }\n\n    let right = 0\n\n    // Reset and calculate widths on every resize\n    this.breakpoints.forEach((breakpoint) => {\n      $navigationList.insertBefore(breakpoint.element, $menu)\n\n      // Calculate widths\n      right += breakpoint.element.offsetWidth\n      breakpoint.right = right\n    })\n\n    // Reset space for menu button\n    this.width = $navigationList.offsetWidth\n  }\n\n  /**\n   * Add the breakpoints with default positions\n   */\n  setupNavigation() {\n    const { $navigationItems } = this\n\n    // Skip with no navigation items\n    if (!$navigationItems) {\n      return\n    }\n\n    $navigationItems.forEach((element) => {\n      this.breakpoints.push({ element, right: 0 })\n    })\n\n    // Add resize listener for next update\n    window.addEventListener('resize', () => {\n      if (this.updateNavigationTimer) {\n        window.clearTimeout(this.updateNavigationTimer)\n      }\n\n      this.updateNavigationTimer = window.setTimeout(\n        this.handleUpdateNavigation,\n        100\n      )\n    })\n  }\n\n  /**\n   * Add the menu to the DOM\n   */\n  setupMenu() {\n    const { $menu, $menuList } = this\n\n    // Skip with no menu or when already appended\n    if (!$menu || !$menuList || $menuList.parentElement) {\n      return\n    }\n\n    $menuList.classList.add('nhsuk-header__menu-list')\n    $menuList.setAttribute('hidden', '')\n    $menu.appendChild($menuList)\n  }\n\n  /**\n   * Enable the menu\n   */\n  enableMenu() {\n    const { $menu, $menuToggle } = this\n\n    // Skip with no menu or when already enabled\n    if (!$menu || !$menuToggle || this.menuIsEnabled) {\n      return\n    }\n\n    this.menuIsEnabled = true\n    $menu.removeAttribute('hidden')\n\n    // Add click listener to toggle menu\n    $menuToggle.addEventListener('click', this.handleToggleMenu)\n  }\n\n  /**\n   * Disable the menu\n   */\n  disableMenu() {\n    const { $menu, $menuToggle } = this\n\n    // Skip with no menu or when already disabled\n    if (!$menu || !$menuToggle || !this.menuIsEnabled) {\n      return\n    }\n\n    this.closeMenu()\n    this.menuIsEnabled = false\n    $menu.setAttribute('hidden', '')\n\n    // Remove click listener from toggle menu\n    $menuToggle.removeEventListener('click', this.handleToggleMenu)\n  }\n\n  /**\n   * Close the menu\n   *\n   * Closes the menu and updates accessibility state.\n   *\n   * Removes the bottom border from the navigation\n   */\n  closeMenu() {\n    const { $menuList, $menuToggle, $navigation } = this\n\n    // Skip with no menu or when already closed\n    if (\n      !$navigation ||\n      !$menuList ||\n      !$menuToggle ||\n      !this.menuIsEnabled ||\n      !this.menuIsOpen\n    ) {\n      return\n    }\n\n    this.menuIsOpen = false\n    $menuList.setAttribute('hidden', '')\n    $menuToggle.setAttribute('aria-expanded', 'false')\n    $navigation.style.removeProperty('border-bottom-width')\n\n    // Remove escape key listener to close menu\n    document.removeEventListener('keydown', this.handleEscapeKey)\n  }\n\n  /**\n   * Escape key handler\n   *\n   * This function is called when the user\n   * presses the escape key to close the menu.\n   *\n   * @param {KeyboardEvent} event - Key press event\n   */\n  onEscapeKey(event) {\n    if (event.key === 'Escape') {\n      this.closeMenu()\n    }\n  }\n\n  /**\n   * Open the menu\n   *\n   * Opens the menu and updates accessibility state.\n   *\n   * The menu is absolutely positioned, so it adds a border\n   * to the bottom of the navigation to prevent it from overlapping\n   *\n   * Adds event listeners for the close button,\n   */\n  openMenu() {\n    const { $menuList, $menuToggle, $navigation } = this\n\n    // Skip with no menu or when already open\n    if (\n      !$navigation ||\n      !$menuList ||\n      !$menuToggle ||\n      !this.menuIsEnabled ||\n      this.menuIsOpen\n    ) {\n      return\n    }\n\n    this.menuIsOpen = true\n    $menuList.removeAttribute('hidden')\n    $menuToggle.setAttribute('aria-expanded', 'true')\n    $navigation.style.setProperty(\n      'border-bottom-width',\n      `${$menuList.offsetHeight}px`\n    )\n\n    // Add escape key listener to close menu\n    document.addEventListener('keydown', this.handleEscapeKey)\n  }\n\n  /**\n   * Handle menu button click\n   *\n   * Toggles the menu between open and closed\n   */\n  toggleMenu() {\n    if (!this.menuIsEnabled) {\n      return\n    }\n\n    if (this.menuIsOpen) {\n      this.closeMenu()\n    } else {\n      this.openMenu()\n    }\n  }\n\n  /**\n   * Update navigation for the available space\n   *\n   * Moves all items that overflow the available space into the menu\n   */\n  updateNavigation() {\n    this.resetNavigation()\n\n    // Check for items that overflow\n    let menuItems = this.breakpoints.filter((breakpoint) => {\n      return breakpoint.right > this.width\n    })\n\n    // Disable menu if empty\n    if (!menuItems.length) {\n      this.disableMenu()\n      return\n    }\n\n    this.setupMenu()\n    this.enableMenu()\n\n    const { $menu, $menuList, $navigation } = this\n\n    // Skip when no menu or menu list\n    if (!$menu || !$menuList || !$navigation) {\n      return\n    }\n\n    // Subtract space for menu button\n    this.width -= $menu.offsetWidth\n\n    // Move items based on available width\n    this.breakpoints.forEach((breakpoint) => {\n      if (breakpoint.right > this.width) {\n        $menuList.insertAdjacentElement('beforeend', breakpoint.element)\n      }\n    })\n\n    // Update menu height if open\n    if (this.menuIsOpen) {\n      $navigation.style.setProperty(\n        'border-bottom-width',\n        `${$menuList.offsetHeight}px`\n      )\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes\n   */\n  static moduleName = 'nhsuk-header'\n}\n\n/**\n * Initialise header component\n *\n * @deprecated Use {@link createAll | `createAll(Header)`} instead.\n * @param {InitOptions} [options]\n */\nexport function initHeader(options) {\n  const { scope: $scope } = normaliseOptions(options)\n\n  const $root = $scope?.querySelector(`[data-module=\"${Header.moduleName}\"]`)\n\n  if (!$root) {\n    return\n  }\n\n  new Header($root)\n}\n\n/**\n * @import { createAll, InitOptions } from '../../index.mjs'\n */\n","import { normaliseOptions } from '../../common/configuration/index.mjs'\nimport { setFocus } from '../../common/index.mjs'\nimport { ConfigurableComponent } from '../../configurable-component.mjs'\n\n/**\n * Notification banner component\n *\n * Adapted from https://github.com/alphagov/govuk-frontend/blob/v5.10.2/packages/govuk-frontend/src/govuk/components/notification-banner/notification-banner.mjs\n *\n * @augments ConfigurableComponent<NotificationBannerConfig>\n */\nexport class NotificationBanner extends ConfigurableComponent {\n  /**\n   * @param {Element | null} $root - HTML element to use for component\n   * @param {NotificationBannerConfig} [config] - Notification banner config\n   */\n  constructor($root, config = {}) {\n    super($root, config)\n\n    /**\n     * Focus the notification banner\n     *\n     * If `role=\"alert\"` is set, focus the element to help some assistive\n     * technologies prioritise announcing it.\n     *\n     * You can turn off the auto-focus functionality by setting\n     * `data-disable-auto-focus=\"true\"` in the component HTML. You might wish to\n     * do this based on user research findings, or to avoid a clash with another\n     * element which should be focused when the page loads.\n     */\n    if (\n      this.$root.getAttribute('role') === 'alert' &&\n      !this.config.disableAutoFocus\n    ) {\n      setFocus(this.$root)\n    }\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes.\n   */\n  static moduleName = 'nhsuk-notification-banner'\n\n  /**\n   * Notification banner default config\n   *\n   * @see {@link NotificationBannerConfig}\n   * @constant\n   * @type {NotificationBannerConfig}\n   */\n  static defaults = Object.freeze({\n    disableAutoFocus: false\n  })\n\n  /**\n   * Notification banner config schema\n   *\n   * @constant\n   * @satisfies {Schema<NotificationBannerConfig>}\n   */\n  static schema = Object.freeze({\n    properties: {\n      disableAutoFocus: { type: 'boolean' }\n    }\n  })\n}\n\n/**\n * Initialise notification banner component\n *\n * @deprecated Use {@link createAll | `createAll(NotificationBanner, options)`} instead.\n * @param {InitOptions & NotificationBannerConfig} [options]\n */\nexport function initNotificationBanners(options) {\n  const { scope: $scope } = normaliseOptions(options)\n\n  const $notificationBanners = $scope?.querySelectorAll(\n    `[data-module=\"${NotificationBanner.moduleName}\"]`\n  )\n\n  $notificationBanners?.forEach(($notificationBanner) => {\n    new NotificationBanner($notificationBanner, options)\n  })\n}\n\n/**\n * Notification banner config\n *\n * @typedef {object} NotificationBannerConfig\n * @property {boolean} [disableAutoFocus=false] - If set to `true` the\n *   notification banner will not be focussed when the page loads. This only\n *   applies if the component has a `role` of `alert` â€“ in other cases the\n *   component will not be focused on page load, regardless of this option.\n */\n\n/**\n * @import { createAll, InitOptions } from '../../index.mjs'\n * @import { Schema } from '../../common/configuration/index.mjs'\n */\n","import { normaliseOptions } from '../../common/configuration/index.mjs'\nimport { toggleConditionalInput } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Radios component\n *\n * Conditionally show content when a radio button is checked\n *\n * Test at {@link http://localhost:3000/nhsuk-frontend/components/radios/with-conditional-content/}\n */\nexport class Radios extends Component {\n  /**\n   * @param {Element | null} $root - HTML element to use for component\n   */\n  constructor($root) {\n    super($root)\n\n    const $inputs = this.$root.querySelectorAll('input[type=\"radio\"]')\n    if (!$inputs.length) {\n      throw new ElementError({\n        component: Radios,\n        identifier: 'Form inputs (`<input type=\"radio\">`)'\n      })\n    }\n\n    this.$inputs = $inputs\n\n    this.$inputs.forEach(($input) => {\n      const targetId = $input.getAttribute('aria-controls')\n\n      // Skip radios without aria-controls attributes\n      if (!targetId) {\n        return\n      }\n\n      // Throw if target conditional element does not exist.\n      if (!document.getElementById(targetId)) {\n        throw new ElementError({\n          component: Radios,\n          identifier: `Conditional reveal (\\`id=\"${targetId}\"\\`)`\n        })\n      }\n    })\n\n    // When the page is restored after navigating 'back' in some browsers the\n    // state of form controls is not restored until *after* the DOMContentLoaded\n    // event is fired, so we need to sync after the pageshow event.\n    window.addEventListener('pageshow', () => this.syncAllConditionalReveals())\n\n    // Although we've set up handlers to sync state on the pageshow event, init\n    // could be called after those events have fired, for example if they are\n    // added to the page dynamically, so sync now too.\n    this.syncAllConditionalReveals()\n\n    // Handle events\n    this.$root.addEventListener('click', (event) => this.handleClick(event))\n  }\n\n  /**\n   * Sync the conditional reveal states for all radio buttons in this component.\n   */\n  syncAllConditionalReveals() {\n    this.$inputs.forEach(($input) =>\n      this.syncConditionalRevealWithInputState($input)\n    )\n  }\n\n  /**\n   * Sync conditional reveal with the input state\n   *\n   * Synchronise the visibility of the conditional reveal, and its accessible\n   * state, with the input's checked state.\n   *\n   * @param {HTMLInputElement} $input - Radio input\n   */\n  syncConditionalRevealWithInputState($input) {\n    toggleConditionalInput($input, 'nhsuk-radios__conditional--hidden')\n  }\n\n  /**\n   * Toggle classes and attributes\n   *\n   * @param {MouseEvent} event - Click event\n   */\n  handleClick(event) {\n    const $clickedInput = event.target\n\n    // Ignore clicks on things that aren't radio buttons\n    if (\n      !($clickedInput instanceof HTMLInputElement) ||\n      $clickedInput.type !== 'radio'\n    ) {\n      return\n    }\n\n    // We only need to consider radios with conditional reveals, which will have\n    // aria-controls attributes.\n    const $allInputs = document.querySelectorAll(\n      'input[type=\"radio\"][aria-controls]'\n    )\n\n    const $clickedInputForm = $clickedInput.form\n    const $clickedInputName = $clickedInput.name\n\n    $allInputs.forEach(($input) => {\n      const hasSameFormOwner = $input.form === $clickedInputForm\n      const hasSameName = $input.name === $clickedInputName\n\n      if (hasSameName && hasSameFormOwner) {\n        this.syncConditionalRevealWithInputState($input)\n      }\n    })\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes\n   */\n  static moduleName = 'nhsuk-radios'\n}\n\n/**\n * Initialise radios component\n *\n * @deprecated Use {@link createAll | `createAll(Radios)`} instead.\n * @param {InitOptions} [options]\n */\nexport function initRadios(options) {\n  const { scope: $scope } = normaliseOptions(options)\n\n  const $radios = $scope?.querySelectorAll(\n    `[data-module=\"${Radios.moduleName}\"]`\n  )\n\n  $radios?.forEach(($root) => {\n    new Radios($root)\n  })\n}\n\n/**\n * @import { createAll, InitOptions } from '../../index.mjs'\n */\n","/* eslint-disable es-x/no-global-this */\n\nimport { normaliseOptions } from '../../common/configuration/index.mjs'\nimport { setFocus } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\nconst _self =\n  typeof globalThis !== 'undefined'\n    ? globalThis // Modern browsers, Node.js\n    : self // Old browsers, web workers\n\n/**\n * Skip link component\n *\n * When using VoiceOver on iOS, focus remains on the skip link anchor\n * when elected so the next focusable element is not at the jumped to area.\n *\n * @augments Component<HTMLAnchorElement>\n */\nexport class SkipLink extends Component {\n  static elementType = _self.HTMLAnchorElement\n\n  /**\n   * @param {Element | null} $root - HTML element to use for component\n   */\n  constructor($root) {\n    super($root)\n\n    const hash = this.$root.hash\n    const href = this.$root.getAttribute('href') ?? ''\n\n    const linkedElementId = hash.replace('#', '')\n    if (!linkedElementId) {\n      throw new ElementError({\n        component: SkipLink,\n        identifier: `Target link (\\`href=\"${href}\"\\`) hash fragment`\n      })\n    }\n\n    const $linkedElement = document.getElementById(linkedElementId)\n\n    // Check for linked element\n    if (!$linkedElement) {\n      throw new ElementError({\n        component: SkipLink,\n        element: $linkedElement,\n        identifier: `Target content (\\`id=\"${linkedElementId}\"\\`)`\n      })\n    }\n\n    /**\n     * Focus the linked element on click\n     *\n     * Adds a helper CSS class to hide native focus styles,\n     * but removes it on blur to restore native focus styles\n     */\n    this.$root.addEventListener('click', () =>\n      setFocus($linkedElement, {\n        onBeforeFocus() {\n          $linkedElement.classList.add('nhsuk-skip-link-focused-element')\n        },\n        onBlur() {\n          $linkedElement.classList.remove('nhsuk-skip-link-focused-element')\n        }\n      })\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes\n   */\n  static moduleName = 'nhsuk-skip-link'\n}\n\n/**\n * Initialise skip link component\n *\n * @deprecated Use {@link createAll | `createAll(SkipLink)`} instead.\n * @param {InitOptions} [options]\n */\nexport function initSkipLinks(options) {\n  const { scope: $scope } = normaliseOptions(options)\n\n  const $skipLinks = $scope?.querySelectorAll(\n    `[data-module=\"${SkipLink.moduleName}\"]`\n  )\n\n  $skipLinks?.forEach(($root) => {\n    new SkipLink($root)\n  })\n}\n\n/**\n * @import { createAll, InitOptions } from '../../index.mjs'\n */\n","import { normaliseOptions } from '../../common/configuration/index.mjs'\nimport { getBreakpoint } from '../../common/index.mjs'\nimport { Component } from '../../component.mjs'\nimport { ElementError } from '../../errors/index.mjs'\n\n/**\n * Tabs component\n */\nexport class Tabs extends Component {\n  jsHiddenClass = 'nhsuk-tabs__panel--hidden'\n  changingHash = false\n\n  /**\n   * @type {MediaQueryList | null}\n   */\n  mql = null\n\n  /**\n   * @param {Element | null} $root - HTML element to use for component\n   */\n  constructor($root) {\n    super($root)\n\n    const $tabs = this.$root.querySelectorAll('a.nhsuk-tabs__tab')\n    if (!$tabs.length) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'Links (`<a class=\"nhsuk-tabs__tab\">`)'\n      })\n    }\n\n    this.$tabs = $tabs\n\n    // Save bound functions so we can remove event listeners during teardown\n    this.boundTabClick = this.onTabClick.bind(this)\n    this.boundTabKeydown = this.onTabKeydown.bind(this)\n    this.boundOnHashChange = this.onHashChange.bind(this)\n\n    const $tabList = this.$root.querySelector('.nhsuk-tabs__list')\n    const $tabListItems = this.$root.querySelectorAll('.nhsuk-tabs__list-item')\n\n    if (!$tabList) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'List (`<ul class=\"nhsuk-tabs__list\">`)'\n      })\n    }\n\n    if (!$tabListItems.length) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: 'List items (`<li class=\"nhsuk-tabs__list-item\">`)'\n      })\n    }\n\n    this.$tabList = $tabList\n    this.$tabListItems = $tabListItems\n\n    this.setupResponsiveChecks()\n  }\n\n  /**\n   * Setup viewport resize check\n   */\n  setupResponsiveChecks() {\n    const breakpoint = getBreakpoint('tablet')\n\n    if (!breakpoint.value) {\n      throw new ElementError({\n        component: Tabs,\n        identifier: `CSS custom property (\\`${breakpoint.property}\\`) on pseudo-class \\`:root\\``\n      })\n    }\n\n    // Media query list for NHS.UK frontend tablet breakpoint\n    this.mql = window.matchMedia(`(min-width: ${breakpoint.value})`)\n\n    // MediaQueryList.addEventListener isn't supported by Safari < 14 so we need\n    // to be able to fall back to the deprecated MediaQueryList.addListener\n    if ('addEventListener' in this.mql) {\n      this.mql.addEventListener('change', () => this.checkMode())\n    } else {\n      // @ts-expect-error Property 'addListener' does not exist\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      this.mql.addListener(() => this.checkMode())\n    }\n\n    this.checkMode()\n  }\n\n  /**\n   * Setup or teardown handler for viewport resize check\n   */\n  checkMode() {\n    if (this.mql?.matches) {\n      this.setup()\n    } else {\n      this.teardown()\n    }\n  }\n\n  /**\n   * Setup tab component\n   */\n  setup() {\n    this.$tabList.setAttribute('role', 'tablist')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.setAttribute('role', 'presentation')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Set HTML attributes\n      this.setAttributes($tab)\n\n      // Handle events\n      $tab.addEventListener('click', this.boundTabClick, true)\n      $tab.addEventListener('keydown', this.boundTabKeydown, true)\n\n      // Remove old active panels\n      this.hideTab($tab)\n    })\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $activeTab = this.getTab(window.location.hash) ?? this.$tabs[0]\n\n    this.showTab($activeTab)\n\n    // Handle hashchange events\n    window.addEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Teardown tab component\n   */\n  teardown() {\n    this.$tabList.removeAttribute('role')\n\n    this.$tabListItems.forEach(($item) => {\n      $item.removeAttribute('role')\n    })\n\n    this.$tabs.forEach(($tab) => {\n      // Remove events\n      $tab.removeEventListener('click', this.boundTabClick, true)\n      $tab.removeEventListener('keydown', this.boundTabKeydown, true)\n\n      // Unset HTML attributes\n      this.unsetAttributes($tab)\n    })\n\n    // Remove hashchange event handler\n    window.removeEventListener('hashchange', this.boundOnHashChange, true)\n  }\n\n  /**\n   * Handle hashchange event\n   */\n  onHashChange() {\n    const { hash } = window.location\n    const $tabWithHash = this.getTab(hash)\n    if (!$tabWithHash) {\n      return\n    }\n\n    // Prevent changing the hash\n    if (this.changingHash) {\n      this.changingHash = false\n      return\n    }\n\n    // Show either the active tab according to the URL's hash or the first tab\n    const $previousTab = this.getCurrentTab()\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($previousTab)\n    this.showTab($tabWithHash)\n    $tabWithHash.focus()\n  }\n\n  /**\n   * Hide panel for tab link\n   *\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hideTab($tab) {\n    this.unhighlightTab($tab)\n    this.hidePanel($tab)\n  }\n\n  /**\n   * Show panel for tab link\n   *\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showTab($tab) {\n    this.highlightTab($tab)\n    this.showPanel($tab)\n  }\n\n  /**\n   * Get tab link by hash\n   *\n   * @param {string} hash - Hash fragment including #\n   */\n  getTab(hash) {\n    return this.$root.querySelector(`a.nhsuk-tabs__tab[href=\"${hash}\"]`)\n  }\n\n  /**\n   * Set tab link and panel attributes\n   *\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  setAttributes($tab) {\n    const panelId = $tab.hash.replace('#', '')\n    if (!panelId) {\n      return\n    }\n\n    // set tab attributes\n    $tab.setAttribute('id', `tab_${panelId}`)\n    $tab.setAttribute('role', 'tab')\n    $tab.setAttribute('aria-controls', panelId)\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.setAttribute('tabindex', '-1')\n\n    // set panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.setAttribute('role', 'tabpanel')\n    $panel.setAttribute('aria-labelledby', $tab.id)\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset tab link and panel attributes\n   *\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unsetAttributes($tab) {\n    // unset tab attributes\n    $tab.removeAttribute('id')\n    $tab.removeAttribute('role')\n    $tab.removeAttribute('aria-controls')\n    $tab.removeAttribute('aria-selected')\n    $tab.removeAttribute('tabindex')\n\n    // unset panel attributes\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.removeAttribute('role')\n    $panel.removeAttribute('aria-labelledby')\n    $panel.removeAttribute('tabindex')\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Handle tab link clicks\n   *\n   * @param {MouseEvent} event - Mouse click event\n   */\n  onTabClick(event) {\n    const $currentTab = this.getCurrentTab()\n    const $newTab = event.currentTarget\n\n    if (!$currentTab || !($newTab instanceof HTMLAnchorElement)) {\n      return\n    }\n\n    event.preventDefault()\n\n    this.hideTab($currentTab)\n    this.showTab($newTab)\n    this.createHistoryEntry($newTab)\n  }\n\n  /**\n   * Update browser URL hash fragment for tab\n   *\n   * - Allows back/forward to navigate tabs\n   * - Avoids page jump when hash changes\n   *\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  createHistoryEntry($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    // Save and restore the id\n    // so the page doesn't jump when a user clicks a tab (which changes the hash)\n    const panelId = $panel.id\n    $panel.id = ''\n    this.changingHash = true\n    window.location.hash = panelId\n    $panel.id = panelId\n  }\n\n  /**\n   * Handle tab keydown event\n   *\n   * - Press right/down arrow for next tab\n   * - Press left/up arrow for previous tab\n   *\n   * @param {KeyboardEvent} event - Keydown event\n   */\n  onTabKeydown(event) {\n    switch (event.key) {\n      // 'Left', 'Right', 'Up' and 'Down' required for Edge 16 support.\n      case 'ArrowLeft':\n      case 'ArrowUp':\n      case 'Left':\n      case 'Up':\n        this.activatePreviousTab()\n        event.preventDefault()\n        break\n      case 'ArrowRight':\n      case 'ArrowDown':\n      case 'Right':\n      case 'Down':\n        this.activateNextTab()\n        event.preventDefault()\n        break\n    }\n  }\n\n  /**\n   * Activate next tab\n   */\n  activateNextTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab?.parentElement) {\n      return\n    }\n\n    const $nextTabListItem = $currentTab.parentElement.nextElementSibling\n    if (!$nextTabListItem) {\n      return\n    }\n\n    const $nextTab = $nextTabListItem.querySelector('a.nhsuk-tabs__tab')\n    if (!$nextTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($nextTab)\n    $nextTab.focus()\n    this.createHistoryEntry($nextTab)\n  }\n\n  /**\n   * Activate previous tab\n   */\n  activatePreviousTab() {\n    const $currentTab = this.getCurrentTab()\n    if (!$currentTab?.parentElement) {\n      return\n    }\n\n    const $previousTabListItem =\n      $currentTab.parentElement.previousElementSibling\n    if (!$previousTabListItem) {\n      return\n    }\n\n    const $previousTab = $previousTabListItem.querySelector('a.nhsuk-tabs__tab')\n    if (!$previousTab) {\n      return\n    }\n\n    this.hideTab($currentTab)\n    this.showTab($previousTab)\n    $previousTab.focus()\n    this.createHistoryEntry($previousTab)\n  }\n\n  /**\n   * Get tab panel for tab link\n   *\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  getPanel($tab) {\n    const panelId = $tab.hash.replace('#', '')\n    if (!panelId) {\n      return null\n    }\n\n    return this.$root.querySelector(`#${panelId}`)\n  }\n\n  /**\n   * Show tab panel for tab link\n   *\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  showPanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.remove(this.jsHiddenClass)\n  }\n\n  /**\n   * Hide tab panel for tab link\n   *\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  hidePanel($tab) {\n    const $panel = this.getPanel($tab)\n    if (!$panel) {\n      return\n    }\n\n    $panel.classList.add(this.jsHiddenClass)\n  }\n\n  /**\n   * Unset 'selected' state for tab link\n   *\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  unhighlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'false')\n    $tab.parentElement.classList.remove('nhsuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '-1')\n  }\n\n  /**\n   * Set 'selected' state for tab link\n   *\n   * @param {HTMLAnchorElement} $tab - Tab link\n   */\n  highlightTab($tab) {\n    if (!$tab.parentElement) {\n      return\n    }\n\n    $tab.setAttribute('aria-selected', 'true')\n    $tab.parentElement.classList.add('nhsuk-tabs__list-item--selected')\n    $tab.setAttribute('tabindex', '0')\n  }\n\n  /**\n   * Get current tab link\n   */\n  getCurrentTab() {\n    return this.$root.querySelector(\n      '.nhsuk-tabs__list-item--selected a.nhsuk-tabs__tab'\n    )\n  }\n\n  /**\n   * Name for the component used when initialising using data-module attributes\n   */\n  static moduleName = 'nhsuk-tabs'\n}\n\n/**\n * Initialise tabs component\n *\n * @deprecated Use {@link createAll | `createAll(Tabs)`} instead.\n * @param {InitOptions} [options]\n */\nexport function initTabs(options) {\n  const { scope: $scope } = normaliseOptions(options)\n\n  const $tabs = $scope?.querySelectorAll(`[data-module=\"${Tabs.moduleName}\"]`)\n\n  $tabs?.forEach(($root) => {\n    new Tabs($root)\n  })\n}\n\n/**\n * @import { createAll, InitOptions } from '../../index.mjs'\n */\n","import { normaliseOptions } from './common/configuration/index.mjs'\nimport { isObject, isSupported } from './common/index.mjs'\nimport {\n  Button,\n  CharacterCount,\n  Checkboxes,\n  ErrorSummary,\n  Header,\n  NotificationBanner,\n  Radios,\n  SkipLink,\n  Tabs\n} from './components/index.mjs'\nimport { ElementError, SupportError } from './errors/index.mjs'\n\n/**\n * Initialise all components\n *\n * Use the `data-module` attributes to find and initialise all of the\n * components provided as part of NHS.UK frontend.\n *\n * @overload\n * @param {Config} [config] - Config for all components (with optional scope)\n * @returns {void}\n */\n\n/**\n * @overload\n * @param {Element | Document | null} [$scope] - Scope of the document to search within\n * @returns {void}\n */\n\n/**\n * @param {Config | Element | Document | null} [scopeOrConfig]\n */\nexport function initAll(scopeOrConfig = {}) {\n  const config = isObject(scopeOrConfig) ? scopeOrConfig : {}\n\n  // Extract initialisation options\n  const options = normaliseOptions(scopeOrConfig)\n\n  try {\n    // Skip initialisation when NHS.UK frontend is not supported\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n\n    // Users can initialise NHS.UK frontend in certain sections of the page\n    // unless the scope is null (for example, query selector not found)\n    if (options.scope === null) {\n      throw new ElementError({\n        element: options.scope,\n        identifier: 'NHS.UK frontend scope element (`$scope`)'\n      })\n    }\n  } catch (error) {\n    if (options.onError) {\n      options.onError(error, {\n        config\n      })\n    } else {\n      console.log(error)\n    }\n\n    return\n  }\n\n  const components = /** @type {const} */ ([\n    [Button, config.button],\n    [CharacterCount, config.characterCount],\n    [Checkboxes],\n    [ErrorSummary, config.errorSummary],\n    [Header],\n    [NotificationBanner, config.notificationBanner],\n    [Radios],\n    [SkipLink],\n    [Tabs]\n  ])\n\n  components.forEach(([Component, componentConfig]) => {\n    createAll(Component, componentConfig, options)\n  })\n}\n\n/**\n * Create all instances of a specific component on the page\n *\n * Uses the `data-module` attribute to find all elements matching the specified\n * component on the page, creating instances of the component object for each\n * of them.\n *\n * Any component errors will be caught and logged to the console.\n *\n * @template {CompatibleClass | CompatibleClass<typeof ConfigurableComponent>} ComponentClass\n * @overload\n * @param {ComponentClass} Component - Component class to initialise\n * @param {ComponentConfig<ComponentClass>} [config] - Config supplied to component\n * @param {CreateAllOptions<ComponentClass>} [options] - Options including scope of the document to search within and callback function if error throw by component on init\n * @returns {InstanceType<ComponentClass>[]} Array of initialised components\n */\n\n/**\n * @template {CompatibleClass | CompatibleClass<typeof ConfigurableComponent>} ComponentClass\n * @overload\n * @param {ComponentClass} Component - Component class to initialise\n * @param {ComponentConfig<ComponentClass>} [config] - Config supplied to component\n * @param {OnErrorCallback<ComponentClass>} [onError] - Initialisation error callback\n * @returns {InstanceType<ComponentClass>[]} Array of initialised components\n */\n\n/**\n * @template {CompatibleClass | CompatibleClass<typeof ConfigurableComponent>} ComponentClass\n * @overload\n * @param {ComponentClass} Component - Component class to initialise\n * @param {ComponentConfig<ComponentClass>} [config] - Config supplied to component\n * @param {Element | Document | null} [$scope] - Scope of the document to search within\n * @returns {InstanceType<ComponentClass>[]} Array of initialised components\n */\n\n/**\n * @template {CompatibleClass | CompatibleClass<typeof ConfigurableComponent>} ComponentClass\n * @param {ComponentClass} Component - Component class to initialise\n * @param {ComponentConfig<ComponentClass>} [config] - Config supplied to component\n * @param {CreateAllOptions<ComponentClass> | OnErrorCallback<ComponentClass> | Element | Document | null} [scopeOrOptions]\n */\nexport function createAll(Component, config, scopeOrOptions) {\n  let /** @type {NodeListOf<Element> | undefined} */ $elements\n\n  // Extract initialisation options\n  const options = normaliseOptions(scopeOrOptions)\n\n  try {\n    // Skip initialisation when NHS.UK frontend is not supported\n    if (!isSupported()) {\n      throw new SupportError()\n    }\n\n    // Users can initialise NHS.UK frontend in certain sections of the page\n    // unless the scope is null (for example, query selector not found)\n    if (options.scope === null) {\n      throw new ElementError({\n        element: options.scope,\n        component: Component,\n        identifier: 'Scope element (`$scope`)'\n      })\n    }\n\n    $elements = options.scope?.querySelectorAll(\n      `[data-module=\"${Component.moduleName}\"]`\n    )\n  } catch (error) {\n    if (options.onError) {\n      options.onError(error, {\n        component: Component,\n        config\n      })\n    } else {\n      console.log(error)\n    }\n\n    return []\n  }\n\n  return Array.from($elements ?? [])\n    .map(($element) => {\n      try {\n        return /** @type {InstanceType<ComponentClass>} */ (\n          // Only pass config to components that accept it\n          !!config && 'defaults' in Component\n            ? new Component($element, config)\n            : new Component($element)\n        )\n      } catch (error) {\n        if (options.onError) {\n          options.onError(error, {\n            element: $element,\n            component: Component,\n            config\n          })\n        } else {\n          console.log(error)\n        }\n\n        return null\n      }\n    })\n    .filter((instance) => !!instance) // Exclude components that errored\n}\n\nexport * from './i18n.mjs'\nexport * from './common/index.mjs'\nexport * from './components/index.mjs'\nexport * from './errors/index.mjs'\n\n/**\n * NHS.UK frontend config for all components via `initAll()`\n *\n * @typedef {object} Config\n * @property {Element | Document | null} [scope] - Scope of the document to search within\n * @property {OnErrorCallback<CompatibleClass>} [onError] - Initialisation error callback\n * @property {ComponentConfig<typeof Button>} [button] - Button config\n * @property {ComponentConfig<typeof CharacterCount>} [characterCount] - Character count config\n * @property {ComponentConfig<typeof ErrorSummary>} [errorSummary] - Error Summary config\n * @property {ComponentConfig<typeof NotificationBanner>} [notificationBanner] - Notification Banner config\n */\n\n/**\n * Component config\n *\n * @template {CompatibleClass} ComponentClass\n * @typedef {ConstructorParameters<ComponentClass>[1]} ComponentConfig\n */\n\n/**\n * Initialisation error context\n *\n * Contains the element, component class and configuration\n *\n * @template {CompatibleClass} ComponentClass\n * @typedef {object} ErrorContext\n * @property {Element} [element] - Element used for component module initialisation\n * @property {ComponentClass} [component] - Class of component\n * @property {Config | ComponentConfig<ComponentClass>} config - Config supplied to components\n */\n\n/**\n * Initialisation error callback\n *\n * @template {CompatibleClass} ComponentClass\n * @callback OnErrorCallback\n * @param {unknown} error - Thrown error\n * @param {ErrorContext<ComponentClass>} context - Object containing the element, component class and configuration\n */\n\n/**\n * Initialisation options\n *\n * @template {CompatibleClass} ComponentClass\n * @typedef {object} CreateAllOptions\n * @property {Element | Document | null} [scope] - Scope of the document to search within\n * @property {OnErrorCallback<ComponentClass>} [onError] - Initialisation error callback\n */\n\n/**\n * @import { CompatibleClass } from './component.mjs'\n * @import { ConfigurableComponent } from './configurable-component.mjs'\n */\n"],"names":["closestAttributeValue","$element","attributeName","$closestElementWithAttribute","closest","getAttribute","version","toggleConditionalInput","$input","className","HTMLInputElement","targetId","target","document","getElementById","setAttribute","checked","toString","classList","toggle","getBreakpoint","name","property","value","window","getComputedStyle","documentElement","getPropertyValue","undefined","setFocus","options","isFocusable","onFocus","removeEventListener","addEventListener","onBlur","call","removeAttribute","onBeforeFocus","focus","isInitialised","$root","moduleName","HTMLElement","hasAttribute","isSupported","$scope","body","contains","isObject","option","Array","isArray","isScope","Element","Document","formatErrorMessage","Component","message","normaliseString","trimmedValue","trim","output","outputType","type","includes","length","isFinite","Number","extractConfigByNamespace","schema","dataset","namespace","properties","newObject","key","Object","entries","current","keyParts","split","index","mergeConfigs","configObjects","formattedConfigObject","configObject","keys","override","NHSUKFrontendError","Error","constructor","args","SupportError","supportMessage","HTMLScriptElement","prototype","ConfigError","ElementError","component","identifier","element","expectedType","InitError","componentOrMessage","normaliseDataset","out","entry","field","normaliseOptions","scopeOrOptions","onError","scope","validateConfig","config","validationErrors","conditions","errors","required","errorMessage","every","push","_self","globalThis","self","childConstructor","elementType","checkSupport","checkInitialised","ConfigurableComponent","defaults","datasetConfig","configOverride","_datasetConfig","DEBOUNCE_TIMEOUT_IN_SECONDS","Button","debounceFormSubmitTimer","event","handleKeyDown","debounce","preventDefault","click","preventDoubleClick","setTimeout","freeze","initButtons","$buttons","querySelectorAll","forEach","I18n","translations","_config$locale","locale","lang","t","lookupKey","translation","count","translationPluralForm","getPluralSuffix","match","replacePlaceholders","translationString","formatter","Intl","NumberFormat","supportedLocalesOf","replace","placeholderWithBraces","placeholderKey","hasOwnProperty","placeholderValue","format","hasIntlPluralRulesSupport","Boolean","PluralRules","preferredForm","select","console","warn","CharacterCount","_ref","_this$config$maxwords","lastInputTimestamp","lastInputValue","valueChecker","$textarea","querySelector","HTMLTextAreaElement","i18n","maxLength","maxwords","maxlength","Infinity","textareaDescriptionId","id","$textareaDescription","$errorMessage","exec","textContent","insertAdjacentElement","$screenReaderCountMessage","createElement","$visibleCountMessage","add","bindChangeEvents","updateCountMessage","configOverrides","text","_text$match","tokens","handleKeyUp","handleFocus","handleBlur","checkIfValueChanged","updateVisibleCountMessage","updateScreenReaderCountMessage","remainingNumber","isError","isOverThreshold","formattedUpdateMessage","countType","formatCountMessage","translationKeySuffix","Math","abs","threshold","currentLength","thresholdValue","Date","now","setInterval","clearInterval","charactersUnderLimit","one","other","charactersAtLimit","charactersOverLimit","wordsUnderLimit","wordsAtLimit","wordsOverLimit","textareaDescription","anyOf","initCharacterCounts","$characterCounts","Checkboxes","$inputs","syncAllConditionalReveals","handleClick","syncConditionalRevealWithInputState","unCheckAllInputsExcept","checkboxExclusiveGroup","exclusiveGroup","selectorGroup","allInputsWithSameName","$inputWithSameName","hasSameFormOwner","form","setInputState","unCheckExclusiveInputs","allInputsWithSameNameAndExclusiveBehaviour","$exclusiveInput","$clickedInput","hasAriaControls","initCheckboxes","$checkboxes","ErrorSummary","disableAutoFocus","focusOnPageLoad","getAssociatedLegendOrLabel","_document$querySelect","$fieldset","$legends","getElementsByTagName","$candidateLegend","legendTop","getBoundingClientRect","top","inputRect","height","innerHeight","inputBottom","focusTarget","$target","HTMLAnchorElement","inputId","hash","$legendOrLabel","scrollIntoView","preventScroll","initErrorSummary","Header","$navigation","$navigationList","$navigationItems","$menu","$menuToggle","$menuList","width","breakpoints","updateNavigationTimer","menuIsEnabled","menuIsOpen","HTMLButtonElement","handleEscapeKey","onEscapeKey","bind","handleUpdateNavigation","updateNavigation","handleToggleMenu","toggleMenu","setupNavigation","resetNavigation","right","breakpoint","insertBefore","offsetWidth","clearTimeout","setupMenu","parentElement","appendChild","enableMenu","disableMenu","closeMenu","style","removeProperty","openMenu","setProperty","offsetHeight","menuItems","filter","initHeader","NotificationBanner","initNotificationBanners","$notificationBanners","$notificationBanner","Radios","$allInputs","$clickedInputForm","$clickedInputName","hasSameName","initRadios","$radios","SkipLink","_this$$root$getAttrib","href","linkedElementId","$linkedElement","remove","initSkipLinks","$skipLinks","Tabs","jsHiddenClass","changingHash","mql","$tabs","boundTabClick","onTabClick","boundTabKeydown","onTabKeydown","boundOnHashChange","onHashChange","$tabList","$tabListItems","setupResponsiveChecks","matchMedia","checkMode","addListener","_this$mql","matches","setup","teardown","_this$getTab","$item","$tab","setAttributes","hideTab","$activeTab","getTab","location","showTab","unsetAttributes","$tabWithHash","$previousTab","getCurrentTab","unhighlightTab","hidePanel","highlightTab","showPanel","panelId","$panel","getPanel","$currentTab","$newTab","currentTarget","createHistoryEntry","activatePreviousTab","activateNextTab","$nextTabListItem","nextElementSibling","$nextTab","$previousTabListItem","previousElementSibling","initTabs","initAll","scopeOrConfig","error","log","components","button","characterCount","errorSummary","notificationBanner","componentConfig","createAll","$elements","_options$scope","from","map","instance"],"mappings":"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"}